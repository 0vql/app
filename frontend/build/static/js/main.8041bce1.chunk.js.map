{"version":3,"sources":["services/perm-service.ts","components/utils/buttons/circle-button.tsx","components/navigation/navbar.tsx","store/ui.ts","store/api.ts","store/utils/filter.ts","store/channels.ts","components/utils/buttons/normal-button.tsx","components/utils/input/input.tsx","components/modals/modal.tsx","components/modals/create-channel.tsx","store/guilds.ts","store/members.ts","components/modals/create-guild.tsx","store/invites.ts","components/modals/create-invite.tsx","components/utils/category.tsx","components/utils/save-changes.tsx","components/modals/guild-settings/guild-settings-overview.tsx","store/roles.ts","store/utils/reduce.ts","components/ctx-menus/dev-mode-menu-section.tsx","components/ctx-menus/role-menu.tsx","components/utils/input/toggle.tsx","components/utils/tab-link.tsx","hooks/use-perms.ts","components/modals/guild-settings/role-permissions.tsx","components/modals/guild-settings/guild-settings-roles.tsx","components/utils/buttons/esc-button.tsx","components/modals/guild-settings/guild-settings-invites.tsx","components/utils/nav-tabs.tsx","components/modals/guild-settings/guild-settings.tsx","components/user/username.tsx","components/modals/user-profile.tsx","store/config.ts","store/utils/rest-headers.ts","store/users.ts","components/modals/user-settings/user-settings-overview.tsx","store/auth.ts","components/modals/user-settings/user-settings-security.tsx","components/modals/user-settings/user-settings.tsx","components/utils/ui-dialog.tsx","services/ws-service.ts","store/typing.ts","store/meta.ts","store/messages.ts","store/pings.ts","components/ws-listener.tsx","components/pages/page-wrapper.tsx","assets/home/chat.svg","assets/home/devices.svg","assets/home/friends.svg","assets/home/secure.svg","components/pages/home-page.tsx","components/navigation/app-navbar.tsx","components/navigation/sidebar/sidebar-footer.tsx","components/utils/dropdown.tsx","components/dropdowns/guild-dropdown.tsx","components/ctx-menus/channel-menu.tsx","components/navigation/sidebar/sidebar-content.tsx","components/navigation/sidebar/sidebar-icon.tsx","components/ctx-menus/guild-menu.tsx","components/navigation/sidebar/sidebar-icons.tsx","components/navigation/sidebar/sidebar.tsx","components/channel/message-box.tsx","components/channel/message/message-toolbar.tsx","components/ctx-menus/message-menu.tsx","components/channel/message/message.tsx","components/channel/text-channel-header.tsx","components/skeleton/skeleton-message.tsx","components/channel/text-based-channel.tsx","components/ctx-menus/guild-member/role-manager.tsx","components/ctx-menus/guild-member/guild-member-menu.tsx","components/user/member-list.tsx","components/pages/guild-page.tsx","components/pages/auth/login-page.tsx","components/pages/auth/register-page.tsx","components/pages/overview-page.tsx","components/pages/auth/logout-page.tsx","store/actions/fetch-entities.ts","components/pages/loading-page.tsx","components/routing/private-route.tsx","components/pages/not-found-page.tsx","components/pages/auth/verify-page.tsx","components/app.tsx","reportWebVitals.ts","store/middleware/rest.ts","store/middleware/ws.ts","index.tsx","store/configure-store.ts"],"names":["CircleButton","props","className","children","Navbar","user","useSelector","s","auth","to","slice","createSlice","name","initialState","reducers","startedEditingMessage","state","payload","editingMessageId","stoppedEditingMessage","focusedInvite","activeInvite","focusedUser","activeUser","pageSwitched","activeChannel","channel","activeGuild","guild","openedModal","openModal","closedModal","toggleDropdown","openDropdown","toggleSaveChanges","saveChangesOpen","openedDialog","openDialog","closedDialog","actions","openSaveChanges","isOpen","dispatch","getState","ui","dialog","closeModal","restCallBegan","createAction","restCallSucceded","restCallFailed","wsCallBegan","wsCallSucceded","wsCallFailed","unique","arr","old","some","e","id","fetched","channels","push","filter","created","deleted","index","findIndex","c","channelId","splice","NormalButton","Input","label","register","options","type","autoFocus","disabled","htmlFor","sizeClass","Modal","typeName","size","useDispatch","closeSnackbar","useSnackbar","appElement","document","querySelector","onRequestClose","CreateChannel","useForm","handleSubmit","setValue","onSubmit","data","guildId","api","event","guilds","updated","find","g","Object","assign","partialGuild","u","getGuild","createSelector","entities","getGuildChannels","getGuildRoles","roles","role","r","members","added","member","removed","m","memberId","partialMember","getMember","userId","getSelfMember","CreateGuild","register2","handleSubmit2","inviteCode","list","invite","CreateInvite","useEffect","onClick","window","navigator","clipboard","writeText","Category","title","count","undefined","SaveChanges","enqueueSnackbar","anchorOrigin","vertical","horizontal","content","key","persist","onClickSave","onSave","onClickReset","obj","style","width","GuildSettingsOverview","onChange","value","iconURL","confirm","updateGuild","roleId","partialRole","getMemberHighestRole","k","roleIds","includes","reduce","acc","val","DevModeMenuSection","ids","map","icon","faIdCard","RoleMenu","devMode","config","color","Toggle","checked","TabLink","tab","setTab","saveChanges","backgroundColor","angrySaveChanges","General","Text","Voice","PermissionTypes","VIEW_CHANNELS","CREATE_INVITE","SEND_MESSAGES","READ_MESSAGES","PermService","description","general","text","permission","ownerId","this","hasPermission","getTotalPerms","All","TypeError","permissions","totalPerms","Boolean","ADMINISTRATOR","prereq","managedUserId","userMember","can","isHigher","canManage","joinedRoles","concat","highestRole","length","usePerms","useStore","RolePermissions","perms","setPerms","fullySetPerms","has","PermToggle","category","permName","on","keys","defaultPermissions","GuildSettingsRoles","getValues","useParams","useState","activeRoleId","setActiveRoleId","activeRole","hoisted","setHoisted","RoleDetails","deleteRole","sort","a","b","position","createRole","updateRole","EscButton","faTimes","GuildSettingsInvites","invites","i","getGuildInvites","Invites","NavTabs","tabs","predicate","t","GuildSettings","perm","Username","userOwnsGuild","discrim","discriminator","toString","padStart","isOnline","status","UserPresence","blob","border","src","process","avatarURL","username","faCrown","UserProfile","badgeIcons","faBug","faSun","faGavel","UserBadges","badges","UserInfo","UserMutualGuilds","get","JSON","parse","localStorage","getItem","set","setItem","memberListToggled","toggleDevMode","toggleMemberList","headers","token","users","partialUser","getUser","UserSettingsOverview","email","stopPropagation","updateSelf","attemptedLogin","shouldVerify","ready","updatedUser","loggedIn","loggedOut","logoutUser","removeItem","verifyCode","code","onSuccess","url","callback","message","alert","UserSettingsSecurity","passwordForm","faInfoCircle","oldPassword","newPassword","method","changePassword","UserSettings","UIDialog","ws","io","connect","secure","path","transports","console","log","lastTypedAt","fetchedEntities","hasListenedToWS","meta","listenedToWS","userTyped","typing","userStoppedTyping","getIndex","messageId","getChannelMessages","messages","initialized","pings","channelMarkedAsRead","guildPings","indexOf","guildMarkedAsRead","WSListener","history","useHistory","store","hasListened","error","variant","autoHideDuration","args","selfCreated","creatorId","uiActions","ignored","userIds","authorId","setTimeout","disconnect","PageWrapper","dropdown","pageTitle","HomePage","ImageCard","alt","addEventListener","join","endsWith","textContent","Chat","Devices","Friends","Secure","AppNavbar","faHashtag","faUserFriends","SidebarFooter","faCog","Dropdown","faChevronDown","GuildDropdown","faUserPlus","faPlusCircle","ChannelMenu","deleteChannel","SidebarContent","guildChannels","SidebarIcon","imageURL","classes","location","useLocation","getAbbr","split","n","Icon","isActive","pathname","startsWith","activeClasses","GuildMenu","faDoorOpen","SidebarIcons","guildIcons","PlusIcon","Sidebar","MessageBox","setContent","typers","saveEdit","createMessage","esc","handleEscape","canSend","target","onKeyDown","secsAgo","moment","Date","diff","startTyping","shiftKey","preventDefault","emptyMessage","replaceAll","rows","placeholder","typingUsers","typingMessage","MessageToolbar","selfUser","isAuthor","faPencilAlt","MessageMenu","Message","author","createdAt","isActuallyExtra","prev","isExtra","MessageHeader","days","today","setHours","setMinutes","setSeconds","day","timestamp","format","MessageContent","updatedAt","TextChannelHeader","canRead","faEyeSlash","SkeletonMessage","TextBasedChannel","element","scrollTop","scrollHeight","loaded","lastMessageId","Array","fill","RoleManager","removeEveryone","slicedRoleIds","setRoleIds","colorStyles","control","option","styles","cursor","input","menu","multiValue","indicatorSeparator","display","indicatorsContainer","marginBottom","float","multiValueLabel","rolesHaveChanged","stringify","roleOption","defaultValue","o","onMenuClose","noOptionsMessage","isMulti","GuildMemberMenu","isSelf","userIsBlocked","faUser","faBan","MemberList","hoistedRoles","getGuildMembers","getGuildUsers","canMember","UserList","by","filtered","getRoleIds","GuildPage","systemChannel","height","LoginPage","VerifyCodeInput","verifyForm","loginUser","RegisterPage","registerUser","OverviewPage","LogoutPage","channelActions","guildActions","memberActions","roleActions","userActions","LoadingPage","fetchEntities","tips","randomIndex","Math","floor","random","PrivateRoute","NotFoundPage","VerifyPage","URLSearchParams","search","App","lastReadMessageIds","basename","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","next","action","axios","request","baseURL","response","unsub","off","wrapperCallback","errorCallback","emit","MODE","ReactDOM","render","maxSnack","configureStore","middleware","getDefaultMiddleware","serializableCheck","reducer","combineReducers","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8041bce1.chunk.js","sourcesContent":["import { getGuild, getGuildRoles } from '../store/guilds';\nimport { getMember, getSelfMember } from '../store/members';\n\n// FIXME: import this namespace from types\nexport namespace PermissionTypes {\n  export enum General {\n    MANAGE_INVITES = 2048,\n    VIEW_CHANNELS = 1024,\n    // MANAGE_NICKNAMES = 512,\n    // CHANGE_NICKNAME = 256,\n    CREATE_INVITE = 128,\n    KICK_MEMBERS = 64,\n    // BAN_MEMBERS = 32,\n    MANAGE_CHANNELS = 16,\n    MANAGE_ROLES = 8,\n    MANAGE_GUILD = 4,\n    // VIEW_AUDIT_LOG = 2,\n    ADMINISTRATOR = 1,\n  }\n  export enum Text {\n    // ADD_REACTIONS = 2048 * 16,\n    // MENTION_EVERYONE = 2048 * 8,\n    READ_MESSAGES = 2048 * 4,\n    MANAGE_MESSAGES = 2048 * 2,\n    SEND_MESSAGES = 2048,\n  }\n  export enum Voice {\n    // MOVE_MEMBERS = 32768 * 8,\n    // MUTE_MEMBERS = 32768 * 4,\n    SPEAK = 32768 * 2,\n    CONNECT = 32768,\n  }\n  export const All = {\n    ...General,\n    ...Text,\n    ...Voice,\n  }\n  export type Permission = General | Text | Voice;\n  export type PermissionString = keyof typeof All;\n  \n  export const defaultPermissions =\n    PermissionTypes.General.VIEW_CHANNELS\n    | PermissionTypes.General.CREATE_INVITE\n    | PermissionTypes.Text.SEND_MESSAGES\n    | PermissionTypes.Text.READ_MESSAGES\n    // | PermissionTypes.Text.ADD_REACTIONS\n    // | PermissionTypes.Voice.CONNECT\n    // | PermissionTypes.Voice.SPEAK;\n}\n\nexport class PermService {\n  public readonly description = {\n    general: {\n      'ADMINISTRATOR': `Gives all permissions. This is a dangerous permission.`,\n      'CREATE_INVITE': 'Ability to create invites for users to join this guild.',\n      'KICK_MEMBERS': 'Ability to kick members from this guild.',\n      'MANAGE_CHANNELS': 'Ability to create, edit, or delete channels.',\n      'MANAGE_GUILD': `Ability to edit general guild settings.`,\n      'MANAGE_ROLES': 'Ability to manage guild roles.',\n      'VIEW_CHANNELS': 'Ability to view channels.',\n    },\n    text: {\n      'MANAGE_MESSAGES': `Ability to manage message other member's messages.`,\n      'READ_MESSAGES': `Ability to read messages,`,\n      'SEND_MESSAGES': 'Ability to send messages in text channels.',\n    },\n  };\n\n  constructor(private state: Store.AppState) {}\n\n  public canMember(permission: PermissionTypes.PermissionString, guild: Entity.Guild, member: Entity.GuildMember) {\n    return guild.ownerId === member.userId\n      || this.hasPermission(\n          this.getTotalPerms(member, guild.id),\n          PermissionTypes.All[permission] as number,\n        );\n  }\n  public can(permission: PermissionTypes.PermissionString, guildId: string) {\n    const guild = getGuild(guildId)(this.state);\n    if (!guild)\n      throw new TypeError('Guild not found');\n    \n    const member = getSelfMember(guildId)(this.state);\n    if (!member)\n      throw new TypeError('Member not found');\n\n    return guild.ownerId === member.userId\n      || this.hasPermission(\n          this.getTotalPerms(member, guildId),\n          PermissionTypes.All[permission] as number,\n        );\n  }\n  public getTotalPerms(member: Entity.GuildMember, guildId: string) {\n    return getGuildRoles(guildId)(this.state)\n      .filter(r => member?.roleIds.includes(r.id))\n      .reduce((acc, value) => value.permissions | acc, 0);\n  }\n  public hasPermission(totalPerms: number, permission: number) {\n    return Boolean(totalPerms & permission)\n      || Boolean(totalPerms & PermissionTypes.General.ADMINISTRATOR);\n  }\n\n  public canManage(prereq: PermissionTypes.PermissionString, guildId: string, managedUserId: string) {\n    const userMember = getMember(guildId, managedUserId)(this.state);\n    if (!userMember) return false;\n\n    return this.can(prereq, guildId)\n      && (this.state.auth.user!.id === userMember.userId\n      || (this.isHigher(guildId, userMember.roleIds)));\n  }\n\n  public canPunish(prereq: PermissionTypes.PermissionString, guildId: string, managedUserId: string) {\n    return this.state.auth.user!.id !== managedUserId\n      && this.can(prereq, guildId)\n      && this.canManage(prereq, guildId, managedUserId);\n  }\n\n  public isHigher(guildId: string, roleIds: string[]) {\n    const guild = getGuild(guildId)(this.state);\n    if (!guild)\n      throw new TypeError('Guild not found');\n\n    const member = getSelfMember(guildId)(this.state);\n    if (!member)\n      throw new TypeError('Member not found');\n\n    const joinedRoles = roleIds.concat(member.roleIds);\n    const roles = getGuildRoles(guildId)(this.state)\n      .filter(r => joinedRoles.includes(r.id));\n\n    const highestRole = roles[roles.length - 1];\n    \n    return guild.ownerId === member.userId\n      || (member.roleIds.includes(highestRole.id)\n      && !roleIds.includes(highestRole.id));\n  }\n}","const CircleButton: React.FunctionComponent<any> = (props) => {\n  return (\n    <button\n      {...props}\n      className={`rounded-full ring ring-gray-400 secondary px-4 py-1 ${props.className}`}>{props.children}</button>\n  );\n}\n \nexport default CircleButton;","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CircleButton from '../utils/buttons/circle-button';\n \nconst Navbar: React.FunctionComponent = () => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  \n  return (\n    <nav className=\"flex items-center justify-between h-15 p-4 px-8\">\n      <a className=\"logo\">\n        <span className=\"font-bold text-white\">accord</span>\n        <span className=\"text-gray-600\">.</span>\n        <span className=\"muted font-light\">app</span>\n      </a>\n      <div>\n        <Link to={user ? '/channels/@me' : '/login'}>\n          <CircleButton>{user ? 'App' : 'Login'}</CircleButton>\n        </Link>\n      </div>\n    </nav>\n  );\n}\n \nexport default Navbar;","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport React from 'react';\n\nconst slice = createSlice({\n  name: 'ui',\n  initialState: {} as Store.AppState['ui'],\n  reducers: {\n    startedEditingMessage: (state, { payload }) => {\n      state.editingMessageId = payload;\n    },\n    stoppedEditingMessage: (state) => {\n      delete state.editingMessageId;\n    },\n    // only 1 invite is created -> to save data, and stop spam\n    focusedInvite: (state, { payload }) => {\n      state.activeInvite = payload;\n    },\n    focusedUser: (state, { payload }) => {\n      state.activeUser = payload;\n    },\n    pageSwitched: (state, { payload }) => {\n      state.activeChannel = payload.channel;\n      state.activeGuild = payload.guild;\n    },\n    openedModal: (state, { payload }) => {      \n      state.openModal = payload;\n    },\n    closedModal: (state) => {\n      delete state.openModal;\n    },\n    toggleDropdown: (state, { payload }) => {      \n      state.openDropdown = payload?.name;\n    },\n    toggleSaveChanges: (state, { payload }) => {\n      state.saveChangesOpen = payload;\n    },\n    openedDialog: (state, { payload }: Store.Action<Store.AppState['ui']['openDialog']>) => {\n      state.openDialog = payload;\n    },\n    closedDialog: (state) => {\n      delete state.openDialog;\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const dropdownIsOpen = (type: React.FunctionComponent) => createSelector<Store.AppState, string | undefined, boolean>(\n  state => state.ui.openDropdown,\n  name => name === type.name,\n);\nexport const modalIsOpen = (type: React.FunctionComponent) => createSelector<Store.AppState, string | undefined, boolean>(\n  state => state.ui.openModal,\n  name => name === type.name,\n);\n\nexport const openSaveChanges = (isOpen: boolean) => (dispatch, getState: () => Store.AppState) => {\n  if (getState().ui.saveChangesOpen === isOpen) return;\n\n  dispatch(actions.toggleSaveChanges(isOpen));\n}\nexport const angrySaveChanges = () => {\n  const saveChanges = document.querySelector('#saveChanges') as HTMLDivElement;\n  if (!saveChanges) return;\n\n  saveChanges.style.backgroundColor = 'var(--danger)';\n}\n\nexport const openDialog = (dialog: Store.AppState['ui']['openDialog']) => (dispatch) => {\n  dispatch(actions.closedDialog());\n  dispatch(actions.openedDialog(dialog));\n}\n\nexport const closeModal = (dispatch) => {\n  dispatch(actions.closedModal());\n  dispatch(openSaveChanges(false));\n  dispatch(actions.focusedUser(null));\n};","import { createAction } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\n\nexport const actions = {\n  restCallBegan: createAction<APIArgs>('api/restCallBegan'),\n  restCallSucceded: createAction<{}>('api/restCallSucceeded'),\n  restCallFailed: createAction<{}>('api/restCallFailed'),\n  wsCallBegan: createAction<WSArgs>('api/wsCallBegan'),\n  wsCallSucceded: createAction<{}>('api/wsCallSucceeded'),\n  wsCallFailed: createAction<{}>('api/wsCallFailed'),\n};\n\nexport interface APIArgs {\n  data?: object;\n  headers?: object;\n  method?: 'get' | 'post' | 'put' | 'patch' | 'delete';\n  onSuccess: string[];\n  url: string;\n  /** Callback to handle side effects. */\n  callback?: (payload: any) => any;\n}\nexport interface WSArgs {\n  data?: object;\n  event: keyof WS.From;\n}","export const unique = (arr: any[]) => (old) => !arr.some(e => e.id === old.id);","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { unique } from './utils/filter';\n\nconst slice = createSlice({\n  name: 'channels',\n  initialState: [] as Store.AppState['entities']['channels'],\n  reducers: {\n    fetched: (channels, { payload }: Store.Action<Entity.Channel[]>) => { \n      channels.push(...payload.filter(unique(channels)));\n    },\n    created: (channels, { payload }: Store.Action<WS.Args.ChannelCreate>) => {\n      channels.push(payload.channel);\n    },\n    deleted: (channels, { payload }: Store.Action<WS.Args.ChannelDelete>) => {\n      const index = channels.findIndex(c => c.id === payload.channelId);\n      channels.splice(index, 1);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const createChannel = (guildId: string, name: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'CHANNEL_CREATE',\n    data: { guildId, name } as WS.Params.ChannelCreate,\n  }));\n}\n\nexport const deleteChannel = (guildId: string, channelId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'CHANNEL_DELETE',\n    data: { guildId, channelId } as WS.Params.ChannelDelete,\n  }));\n}\n\nexport const getChannel = (id: string) =>\n  createSelector<Store.AppState, Entity.Channel[], Entity.Channel | undefined>(\n    state => state.entities.channels,\n    channels => channels.find(c => c.id === id),\n  );","const NormalButton: React.FunctionComponent<any> = (props) => {\n  return (\n    <button\n      {...props}\n      className={`bg-primary font rounded-md py-1.5 px-4 ${props.className}`}>\n      {props.children}\n    </button>\n  );\n}\n\nexport default NormalButton;","import React from 'react';\nimport { UseFormRegister, FieldValues } from 'react-hook-form';\n\nimport './input.scoped.css';\n\nexport interface InputProps {\n  name: string;\n  register: UseFormRegister<FieldValues>;\n  options?: any;\n  autoFocus?: boolean;\n  label?: string;\n  type?: string;\n  className?: string;\n  disabled?: boolean;\n}\n \nconst Input: React.FunctionComponent<InputProps & React.AllHTMLAttributes<HTMLInputElement>> = (props) => {\n  const { label, name, register, options, type, autoFocus, className, disabled } = props;\n  return (\n    <div className={className}>\n      {label &&\n        <label\n          htmlFor={name}\n          className=\"uppercase text-xs font-semibold\">{label}</label>}\n      <input\n        id={name}\n        type={type ?? 'text'}\n        autoFocus={autoFocus}\n        disabled={disabled}\n        {...register(name, { ...options })}\n        className=\"block bg-bg-secondary rounded focus:outline-none w-full h-10 p-2 mt-2\" />\n    </div>\n  );\n}\n \nexport default Input;","import { useSnackbar } from 'notistack';\nimport ReactModal from 'react-modal'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions as ui, closeModal, openSaveChanges } from '../../store/ui';\n\nexport interface ModalProps {\n  typeName: string;\n  size?: keyof typeof sizeClass;\n  className?: string;\n}\n\nconst sizeClass = {\n  'sm': 'rounded-lg w-1/4 inset-x-1/3 inset-y-1/3',\n  'md': 'rounded-lg w-1/3 inset-x-1/3 inset-y-1/4',\n  'lg': 'rounded-lg w-1/3 inset-x-1/3 top-1/4',\n  'full': 'h-full w-full',\n};\n \nconst Modal: React.FunctionComponent<ModalProps> = ({ className, typeName, size, children }) => {\n  const dispatch = useDispatch();\n  const openModal = useSelector((s: Store.AppState) => s.ui.openModal);\n  const { closeSnackbar } = useSnackbar();\n\n  return (\n    <ReactModal\n      className={`bg-bg-primary overflow-auto fixed outline-none ${className} ${sizeClass[size ?? 'sm']}`}\n      appElement={document.querySelector('#root')!}\n      isOpen={openModal === typeName}\n      onRequestClose={() => {\n        dispatch(closeModal);\n        closeSnackbar('saveChanges');\n      }}>{children}</ReactModal>\n  );\n}\n \nexport default Modal;","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createChannel } from '../../store/channels';\nimport NormalButton from '../utils/buttons/normal-button';\nimport Input from '../utils/input/input';\nimport Modal from './modal';\n\nconst CreateChannel: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, setValue } = useForm();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild);\n\n  const create = (data) => {\n    dispatch(createChannel(guild!.id, data.name));\n    setValue('name', '');\n  };\n  \n  return (\n    <Modal typeName={'CreateChannel'}>\n      <form\n        className=\"flex flex-col h-full\"\n        onSubmit={handleSubmit(create)}>\n        <header className=\"text-center mb-5 p-5\">\n          <h1 className=\"text-2xl font-bold inline\">Create Text Channel</h1>\n        </header>\n      \n        <div className=\"flex-grow p-5\">\n          <Input\n            label=\"Channel Name\"\n            name=\"name\"\n            register={register} />\n        </div>\n\n        <footer className=\"bg-bg-secondary\">\n          <NormalButton\n            className=\"float-right m-4\">Create</NormalButton>\n        </footer>\n      </form>\n    </Modal>\n  );\n}\n \nexport default CreateChannel;","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { unique } from './utils/filter';\n\nconst slice = createSlice({\n  name: 'guilds',\n  initialState: [] as Store.AppState['entities']['guilds'],\n  reducers: {\n    fetched: (guilds, { payload }: Store.Action<Entity.Guild[]>) => {\n      guilds.push(...payload.filter(unique(guilds)));\n    },\n    created: (guilds, { payload }: Store.Action<WS.Args.GuildCreate>) => {\n      guilds.push(payload.guild);\n    },\n    updated: (guilds, { payload }: Store.Action<WS.Args.GuildUpdate>) => {\n      const guild = guilds.find(g => g.id === payload.guildId);\n      Object.assign(guild, payload.partialGuild);\n    },\n    deleted: (guilds, { payload }) => {\n      const index = guilds.findIndex(u => u.id === payload.guildId);\n      guilds.splice(index, 1);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const createGuild = (name: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_CREATE',\n    data: { name } as WS.Params.GuildCreate,\n  }));\n}\n\nexport const updateGuild = (guildId: string, payload: Partial<Entity.Guild>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_UPDATE',\n    data: { guildId, ...payload } as WS.Params.GuildUpdate,\n  }));\n}\n\nexport const deleteGuild = (guildId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_DELETE',\n    data: { guildId } as WS.Params.GuildDelete,\n  }));\n}\n\nexport const getGuild = (id: string) =>\ncreateSelector<Store.AppState, Entity.Guild[], Entity.Guild | undefined>(\n  state => state.entities.guilds,\n  guilds => guilds.find(g => g.id === id),\n);\n\nexport const getGuildChannels = (guildId: string | undefined) =>\ncreateSelector<Store.AppState, Entity.Channel[], Entity.Channel[]>(\n  state => state.entities.channels,\n  channels => channels.filter(c => c.guildId === guildId),\n);\n\nexport const getGuildInvites = (guildId: string | undefined) =>\ncreateSelector<Store.AppState, Entity.Invite[], Entity.Invite[]>(\n  state => state.entities.invites.list,\n  invites => invites.filter(i => i.guildId === guildId),\n);\n\nexport const getGuildMembers = (guildId: string | undefined) =>\ncreateSelector<Store.AppState, Entity.GuildMember[], Entity.GuildMember[]>(\n  state => state.entities.members,\n  members => members.filter(m => m.guildId === guildId),\n);\n\nexport const getGuildRoles = (guildId: string | undefined) =>\ncreateSelector<Store.AppState, Entity.Role[], Entity.Role[]>(\n  state => state.entities.roles,\n  role => role.filter(r => r.guildId === guildId),\n);\n\nexport const getGuildUsers = (guildId: string | undefined) =>\ncreateSelector<Store.AppState, { members: Entity.GuildMember[], users: Entity.User[], }, Entity.User[]>(\n  state => ({\n    members: state.entities.members,\n    users: state.entities.users,\n  }),\n  ({ members, users }) => members\n    .filter(m => m.guildId === guildId)\n    .map(m => users.find(u => u.id === m.userId)!\n  ),\n);\n","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { unique } from './utils/filter';\n\nconst slice = createSlice({\n  name: 'members',\n  initialState: [] as Store.AppState['entities']['members'],\n  reducers: {\n    fetched: (members, { payload }: Store.Action<Entity.GuildMember[]>) => {\n      members.push(...payload.filter(unique(members)));\n    },\n    added: (members, { payload }: Store.Action<WS.Args.GuildMemberAdd>) => {\n      members.push(payload.member);\n    },\n    removed: (members, { payload }: Store.Action<WS.Args.GuildMemberRemove>) => {\n      const index = members.findIndex(m => m.id === payload.memberId);      \n      members.splice(index, 1);\n    },\n    updated: (members, { payload }: Store.Action<WS.Args.GuildMemberUpdate>) => {\n      const member = members.find(m => m.id === payload.memberId);\n      Object.assign(member, payload.partialMember);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const joinGuild = (inviteCode: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_MEMBER_ADD',\n    data: { inviteCode } as WS.Params.GuildMemberAdd,\n  }));\n}\n\nexport const leaveGuild = (guildId: string) => (dispatch, getState: () => Store.AppState) => {\n  const user = getState().auth.user!;\n\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_MEMBER_REMOVE',\n    data: { guildId, userId: user.id } as WS.Params.GuildMemberRemove,\n  }));\n}\n\nexport const kickMember = (guildId: string, userId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_MEMBER_REMOVE',\n    data: { guildId, userId } as WS.Params.GuildMemberRemove,\n  }));\n}\n\nexport const updateMember = (memberId: string, options: Partial<Entity.GuildMember>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_MEMBER_UPDATE',\n    data: { memberId, ...options } as WS.Params.GuildMemberUpdate,\n  }));\n}\n\nexport const getMember = (guildId: string, userId: string) =>\ncreateSelector<Store.AppState, Entity.GuildMember[], Entity.GuildMember | undefined>(\n  state => state.entities.members,\n  members => members.find(m => m.guildId === guildId && m.userId === userId),\n);\n\nexport const getSelfMember = (guildId: string | undefined) =>\ncreateSelector<Store.AppState, any, Entity.GuildMember | undefined>(\n  state => ({ user: state.auth.user, members: state.entities.members }),\n  ({ user, members }) => members.find(m => m.guildId === guildId && m.userId === user.id),\n);\n\nexport const filterByRole = (roleId: string) => \ncreateSelector<Store.AppState, Entity.GuildMember[], Entity.GuildMember[]>(\n  state => state.entities.members,\n  members => members.filter(m => m.roleIds.includes(roleId)),\n);","import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { createGuild } from '../../store/guilds';\nimport { joinGuild } from '../../store/members';\nimport NormalButton from '../utils/buttons/normal-button';\nimport Input from '../utils/input/input';\nimport Modal from './modal';\n\nconst CreateGuild: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit } = useForm();\n  const { register: register2, handleSubmit: handleSubmit2 } = useForm();\n\n  const submitCreate = (data) => dispatch(createGuild(data.name));\n  const submitJoin = (data) => dispatch(joinGuild(data.inviteCode));\n\n  return (\n    <Modal\n      className=\"p-5\"\n      typeName={'CreateGuild'}\n      size=\"lg\">\n      <header className=\"text-center mb-5\">\n        <h1 className=\"text-3xl font-bold inline\">Create Guild</h1>\n        <p className=\"lead\">\n          Hang out with your friends. <br />\n          Create an epic guild, or join with friends.\n        </p>\n      </header>\n\n      <h3 className=\"uppercase font-bold mt-10\">Join One</h3>\n\n      <form onSubmit={handleSubmit(submitJoin)}>\n        <Input\n          label=\"Invite Code\"\n          name=\"inviteCode\"\n          register={register} />\n        <NormalButton className=\"bg-tertiary w-full h-11 mt-8\">Join</NormalButton>\n      </form>\n\n      <h3 className=\"uppercase font-bold mt-10\">Make Your Own</h3>\n\n      <form onSubmit={handleSubmit2(submitCreate)}>\n        <Input\n          label=\"Guild Name\"\n          name=\"name\"\n          register={register2} />\n        <NormalButton className=\"w-full h-11 mt-8\">Create</NormalButton>\n      </form>\n    </Modal>\n  );\n}\n\nexport default CreateGuild;","import { createSlice } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { unique } from './utils/filter';\n\nconst slice = createSlice({\n  name: 'invites',\n  initialState: {\n    fetched: {},\n    list: [] as Entity.Invite[],\n  } as Store.AppState['entities']['invites'],\n  reducers: {\n    fetched: ({ list, fetched }, { payload }: Store.Action<Entity.Invite[]>) => {\n      const guildId = payload[0].guildId;\n      list.push(...payload.filter(unique(list)));\n      fetched.push(guildId);\n    },\n    created: ({ list }, { payload }: Store.Action<WS.Args.InviteCreate>) => {\n      list.push(payload.invite);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const createInvite = (guildId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'INVITE_CREATE',\n    data: { guildId } as WS.Params.InviteCreate,\n  }));\n}\n\nexport const deleteInvite = (inviteCode: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'INVITE_DELETE',\n    data: { inviteCode } as WS.Params.InviteDelete,\n  }));\n}","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Input from '../utils/input/input';\nimport NormalButton from '../utils/buttons/normal-button';\nimport Modal from './modal';\nimport { createInvite } from '../../store/invites';\n\nconst CreateInvite: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { register, setValue } = useForm();\n  const { activeGuild, activeInvite, openModal } = useSelector((s: Store.AppState) => s.ui);\n\n  setValue('inviteCode', activeInvite?.id);\n\n  const isOpen = openModal === CreateInvite.name;\n  useEffect(() => {\n    if (activeInvite || !activeGuild) return;\n\n    dispatch(createInvite(activeGuild.id));\n  }, [isOpen]);\n\n  const copyCode = () => window.navigator.clipboard.writeText(activeInvite!.id);\n  \n  return (activeInvite) ? (\n    <Modal typeName={'CreateInvite'} className=\"p-5\">\n      <header className=\"mb-3\">\n        <h1 className=\"font-bold inline uppercase\">Invite Friends to {activeGuild?.name}</h1>\n      </header>\n\n      <h4 className=\"text-xs uppercase font-bold muted mb-3\">Or Send A Guild Invite To A Friend</h4>\n\n      <div className=\"relative\">\n        <NormalButton\n          onClick={copyCode}\n          className=\"absolute -right-3 top-5 m-4\">Copy</NormalButton>\n        <Input\n          label=\"Invite Code\"\n          name=\"inviteCode\"\n          register={register}\n          autoFocus />\n      </div>\n    </Modal>\n  ) : null;\n}\n \nexport default CreateInvite;","export interface CategoryProps {\n  title: string;\n  count?: number;\n  className?: string;\n}\n\nconst Category: React.FunctionComponent<CategoryProps> = ({ title, count, className }) => {\n  return (\n    <h2 className={`uppercase font-bold text-xs tracking-wider ${className}`}>\n      {title} {count !== undefined && `— ${count}`}\n    </h2>\n  );\n}\n\nexport default Category;","import { useSnackbar } from 'notistack';\nimport { useEffect } from 'react';\nimport { UseFormSetValue, FieldValues } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openSaveChanges } from '../../store/ui';\nimport NormalButton from './buttons/normal-button';\n\nexport interface SaveChangesProps {\n  onSave: (e) => any;\n  setValue: UseFormSetValue<FieldValues>;\n  obj: object;\n}\n \nconst SaveChanges: React.FunctionComponent<SaveChangesProps> = (props) => {\n  const { closeSnackbar, enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const isOpen = useSelector((s: Store.AppState) => s.ui.saveChangesOpen);\n\n  useEffect(() => {\n    if (!isOpen) return;\n\n    enqueueSnackbar('', {\n      anchorOrigin: { vertical: 'bottom', horizontal: 'center' },\n      content: SaveChanges,\n      key: 'saveChanges',\n      persist: true,\n    });\n  }, [isOpen]);\n\n  const onClickSave = (e) => {\n    closeSnackbar('saveChanges');\n    props.onSave(e);\n    dispatch(openSaveChanges(false));\n  };\n  const onClickReset = () => {\n    closeSnackbar('saveChanges');\n    for (const key in props.obj)\n      props.setValue(key, props.obj[key]);\n    dispatch(openSaveChanges(false));\n  };\n  const SaveChanges = () => (\n    <div\n      id=\"saveChanges\"\n      className=\"flex justify-between rounded bg-black p-3 px-5\"\n      style={{ width: '50vw' }}>\n      <span className=\"flex items-center flex-grow-1\">Careful — you have unsaved changes!</span>\n      <span>\n        <NormalButton\n          className=\"bg-transparent font\"\n          onClick={onClickReset}>Reset</NormalButton>\n        <NormalButton\n          className=\"bg-success text-black ml-2\"\n          onClick={onClickSave}>Save</NormalButton>\n      </span>\n    </div>\n  );\n\n  return null;\n}\n \nexport default SaveChanges;","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteGuild, updateGuild } from '../../../store/guilds';\nimport { openSaveChanges } from '../../../store/ui';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Input from '../../utils/input/input';\nimport SaveChanges from '../../utils/save-changes';\n \nconst GuildSettingsOverview: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const { register, handleSubmit, setValue } = useForm();\n\n  const onSave = (e) => {\n    const onUpdate = (payload) => dispatch(updateGuild(guild.id, payload));\n    handleSubmit(onUpdate)(e);\n  };\n  const onDelete = () => {\n    const confirmation = window.confirm('Are you sure you want to delete this guild?');\n    confirmation && dispatch(deleteGuild(guild.id));\n  }\n  \n  return (\n    <form\n      onChange={() => dispatch(openSaveChanges(true))}\n      className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <header>\n        <h1 className=\"text-xl font-bold inline\">Guild Overview</h1>\n      </header>\n    \n      <section className=\"w-1/3\">\n        <Input\n          label=\"Name\"\n          name=\"name\"\n          register={register}\n          options={{ value: guild.name }}\n          className=\"pt-5\" />\n        <Input\n          label=\"Icon URL\"\n          name=\"iconURL\"\n          register={register}\n          options={{ value: guild.iconURL }}\n          className=\"pt-5\" />\n      </section>\n\n      <Category\n        className=\"py-2 mt-5\"\n        title=\"Advanced Settings\" />\n\n      <section>\n        <NormalButton\n          type=\"button\"\n          onClick={onDelete}\n          className=\"bg-danger\">Delete</NormalButton>\n      </section>\n\n      <SaveChanges\n        setValue={setValue}\n        onSave={onSave}\n        obj={guild} />\n    </form>    \n  );\n}\n \nexport default GuildSettingsOverview;","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { unique } from './utils/filter';\nimport { actions as api } from './api';\nimport { WS } from '../types/ws';\nimport { byMax } from './utils/reduce';\n\nconst slice = createSlice({\n  name: 'roles',\n  initialState: [] as Store.AppState['entities']['roles'],\n  reducers: {\n    fetched: (roles, { payload }: Store.Action<Entity.Role[]>) => {\n      roles.push(...payload.filter(unique(roles)));\n    },\n    created: (roles, { payload }: Store.Action<WS.Args.GuildRoleCreate>) => {\n      roles.push(payload.role);\n    },\n    updated: (roles, { payload }: Store.Action<WS.Args.GuildRoleUpdate>) => {\n      const role = roles.find(r => r.id === payload.roleId);\n      Object.assign(role, payload.partialRole);\n    },\n    deleted: (roles, { payload }: Store.Action<WS.Args.GuildRoleDelete>) => {\n      const index = roles.findIndex(r => r.id === payload.roleId);\n      roles.splice(index, 1);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const getRole = (id: string) => createSelector<Store.AppState, Entity.Role[], Entity.Role | undefined>(\n  state => state.entities.roles,\n  roles => roles.find(r => r.id === id),\n);\n\nexport const filterHoistedRoles = (guildId: string) => createSelector<Store.AppState, Entity.Role[], Entity.Role[]>(\n  state => state.entities.roles,\n  roles => roles.filter(r => r.guildId === guildId && r.hoisted),\n);\n\nexport const getMemberHighestRole = (guildId: string | undefined, userId: string) => createSelector<Store.AppState, any, Entity.Role>(\n  state => ({ members: state.entities.members, roles: state.entities.roles }),\n  ({ members, roles }) => {\n    const member = members.find(m => m.guildId === guildId && m.userId === userId);\n    return (member) ?\n      roles\n        .filter(r => member.roleIds.includes(r.id))\n        .reduce(byMax('position'))\n      : null;\n  },\n);\n\nexport const createRole = (guildId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_ROLE_CREATE',\n    data: { guildId } as WS.Params.GuildRoleCreate,\n  }));\n}\n\nexport const updateRole = (guildId: string, roleId: string, payload: Partial<Entity.Role>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_ROLE_UPDATE',\n    data: { roleId, guildId, ...payload } as WS.Params.GuildRoleUpdate,\n  }));\n}\n\nexport const deleteRole = (guildId: string, roleId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_ROLE_DELETE',\n    data: { roleId, guildId } as WS.Params.GuildRoleDelete,\n  }));\n}","export const byMax = (k: string) => (acc, val) => (acc < val[k]) ? acc : val;","import { faIdCard } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FunctionComponent } from 'react';\n\ninterface DevModeMenuSectionProps {\n  ids: { title: string, id: string }[];\n}\n \nconst DevModeMenuSection: FunctionComponent<DevModeMenuSectionProps> = ({ ids }) => {\n  return (\n    <>\n      <hr className=\"mt-3 border-bg-primary pt-2\" />\n      {ids.map(({ title, id }) => (<>\n        <div className=\"float-none -mb-1 text-xs\">{title}</div>\n        <div\n          title={title}\n          className=\"flex items-center justify-between pb-2\">\n          <span className=\"muted\">{id}</span>\n          <FontAwesomeIcon icon={faIdCard} />\n        </div>\n      </>))}\n    </>\n  );\n}\n \nexport default DevModeMenuSection;","import { ContextMenu } from 'react-contextmenu';\nimport { useSelector } from 'react-redux';\nimport DevModeMenuSection from './dev-mode-menu-section';\n\nexport interface RoleMenuProps {\n  role: Entity.Role;\n}\n\nconst RoleMenu: React.FunctionComponent<RoleMenuProps> = ({ role }) => {\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  return (\n    <ContextMenu\n      key={role.id}\n      id={role.id}\n      className=\"bg-bg-tertiary rounded shadow w-48 p-2\">\n      <div style={{ color: role.color }}>{role.name}</div>\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'Role ID', id: role.id },\n      ]} />}\n    </ContextMenu>\n  );\n}\n \nexport default RoleMenu;","import './toggle.scoped.css';\n\nexport type ToggleProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLInputElement>,\n  HTMLInputElement> & {\n  checked: boolean;\n  id: string;\n}\n \nconst Toggle: React.FunctionComponent<ToggleProps> = (props) => {  \n  return (\n    <div className={`flex ${props.className}`}>\n      <label htmlFor={props.id} className=\"flex items-center cursor-pointer\">\n        <div className=\"relative\">\n          <input\n            {...props}\n            id={props.id}\n            type=\"checkbox\"\n            className=\"sr-only\"\n            checked={props.checked} />\n          <div className=\"block bg-gray-600 w-14 h-8 rounded-full\" />\n          <div className=\"dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition\" />\n        </div>\n      </label>\n    </div>\n  );\n}\n \nexport default Toggle;","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { angrySaveChanges } from '../../store/ui';\n\nexport interface TabLinkProps {\n  tab: string;\n  id: string;\n  setTab?: React.Dispatch<React.SetStateAction<string>>;\n  className?: string;\n}\ntype Props = React.HTMLAttributes<HTMLAnchorElement>;\n \nconst TabLink: React.FunctionComponent<TabLinkProps & Props> = (props) => {\n  const { id, tab, setTab, children, className } = props;\n  const saveChangesOpen = useSelector((s: Store.AppState) => s.ui.saveChangesOpen);\n\n  return (\n    <Link\n      {...props}\n      to=\"#\"\n      onClick={() => {\n        if (saveChangesOpen)\n          return angrySaveChanges();\n        setTab?.(id);\n      }}\n      className={`\n        flex items-center rounded py-1.5 px-2.5 h-8 mb-0.5 ${className}\n        ${tab === id && 'active'}`}>{children}</Link>\n  );\n}\n \nexport default TabLink;","import { useStore } from 'react-redux';\nimport { PermService } from '../services/perm-service';\n\nconst usePerms = (): PermService => {\n  const state = useStore().getState();\n  return new PermService(state);\n}\n \nexport default usePerms;","import { UseFormSetValue, FieldValues } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport usePerms from '../../../hooks/use-perms';\nimport { PermissionTypes } from '../../../services/perm-service';\nimport { openSaveChanges } from '../../../store/ui';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Toggle from '../../utils/input/toggle';\n\nexport interface RolePermissionsProps {\n  setValue: UseFormSetValue<FieldValues>;\n  setPerms: React.Dispatch<React.SetStateAction<number>>;\n  perms: number;\n}\n \nconst RolePermissions: React.FunctionComponent<RolePermissionsProps> = ({ perms, setPerms, setValue }) => {\n  const dispatch = useDispatch();\n  const { description } = usePerms();\n  \n  const fullySetPerms = (perms: number) => {\n    setPerms(perms);\n    setValue('permissions', perms);\n    dispatch(openSaveChanges(true));\n  };\n  const togglePerm = (name: string, on: boolean) =>\n    fullySetPerms((on)\n      ? perms | PermissionTypes.All[name]\n      : perms & ~PermissionTypes.All[name]);\n  const has = (name: string) => Boolean(perms & PermissionTypes.All[name]);\n  const PermToggle = ({ category, permName }) => (\n    <div className=\"flex items-center justify-between mb-2\">\n      <span>{description[category][permName]}</span>\n      <Toggle\n        id={permName}\n        checked={has(permName)}\n        onChange={() => togglePerm(permName, !has(permName))}\n        className=\"float-right\" />\n    </div>\n  );\n\n  return (\n    <>\n      {Object.keys(description).map(category => (\n        <div key={category} className=\"mb-5\">\n          <Category className=\"muted pb-1.5 mt-5\" title={category} />\n            {Object.keys(description[category]).map(permName =>\n              <PermToggle\n                key={permName}\n                category={category}\n                permName={permName} />)}\n        </div>\n      ))}\n      <NormalButton\n        onClick={() => fullySetPerms(0)}\n        className=\"bg-white text-black\"\n        type=\"button\">Clear</NormalButton>\n      <NormalButton\n        onClick={() => fullySetPerms(PermissionTypes.defaultPermissions)}\n        className=\"bg-secondary text-black ml-2\"\n        type=\"button\">Default</NormalButton>\n    </>\n  );\n}\n \nexport default RolePermissions;","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getGuildRoles } from '../../../store/guilds';\nimport { createRole, deleteRole, getRole, updateRole } from '../../../store/roles';\nimport { openSaveChanges } from '../../../store/ui';\nimport RoleMenu from '../../ctx-menus/role-menu';\nimport CircleButton from '../../utils/buttons/circle-button';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Input from '../../utils/input/input';\nimport Toggle from '../../utils/input/toggle';\nimport SaveChanges from '../../utils/save-changes';\nimport TabLink from '../../utils/tab-link';\nimport RolePermissions from './role-permissions';\n \nconst GuildSettingsRoles: React.FunctionComponent = () => {  \n  const dispatch = useDispatch();\n  const { handleSubmit, register, setValue, getValues } = useForm();\n  const { guildId }: any = useParams();\n  const roles = useSelector(getGuildRoles(guildId));\n  const [activeRoleId, setActiveRoleId] = useState(roles[0].id);\n  const activeRole = useSelector(getRole(activeRoleId));\n  const [perms, setPerms] = useState(0);\n  const [hoisted, setHoisted] = useState(false);\n\n  useEffect(() => {\n    if (!activeRole) return setActiveRoleId(roles[0].id);\n\n    for (const name of ['name', 'color', 'permissions', 'hoisted'])\n      setValue(name, activeRole[name]);\n    setPerms(activeRole.permissions);\n    setHoisted(activeRole.hoisted);\n  }, [activeRole]);\n\n  const RoleDetails = () => {    \n    return (\n      <form\n        className=\"mb-10\"\n        onChange={() => dispatch(openSaveChanges(true))}>\n        <div className=\"flex gap-4\">\n          <Input\n            label=\"Name\"\n            name=\"name\"\n            register={register} />\n          <Input\n            label=\"Color\"\n            name=\"color\"\n            type=\"color\"\n            register={register} />\n        </div>\n\n        <div className=\"mt-5\">\n          <Category title=\"Options\" className=\" pb-1.5 mt-5\" />\n          <span>\n            <span>Separate role on member list</span>\n            <Toggle\n              id=\"hoisted\"\n              checked={hoisted}\n              {...register('hoisted')}\n              onChange={() => {\n                setHoisted(!hoisted);\n                setValue('hoisted', !hoisted);\n              }}\n              className=\"float-right\" />\n          </span>\n        </div>\n  \n        <RolePermissions\n          perms={perms}\n          setPerms={setPerms}\n          setValue={setValue}  />\n        <NormalButton\n          onClick={() => dispatch(deleteRole(guildId, activeRole!.id))}\n          className=\"bg-danger float-right\"\n          type=\"button\">Delete</NormalButton>\n      </form>\n    )\n  }\n\n  const onSave = (e) => {\n    const onUpdate = (payload) => dispatch(updateRole(guildId, activeRole!.id, payload));\n    handleSubmit(onUpdate)(e);\n  };  \n  const byPosition = (a, b) => (a.position > b.position) ? -1 : 1;\n\n  return (\n    <div className=\"grid grid-cols-12 flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <div className=\"lg:col-span-3 col-span-12\">\n        <nav className=\"pr-10\">\n          {roles.sort(byPosition).map(r => (\n            <ContextMenuTrigger id={r.id} key={r.id}>\n              <TabLink\n                key={r.id}\n                style={{ color: r.color }}\n                tab={activeRoleId}\n                setTab={setActiveRoleId}\n              id={r.id}>{r.name}</TabLink>\n              <RoleMenu role={r} />\n            </ContextMenuTrigger>\n          ))}\n          <CircleButton\n            onClick={() => dispatch(createRole(guildId))}\n            style={{ color: 'var(--success)' }}\n            className=\"ring-green-500 m-2\">Create</CircleButton>\n        </nav>\n      </div>\n      <div className=\"lg:col-span-9 col-span-12\">\n        {activeRole && <RoleDetails />}\n      </div>\n\n      <SaveChanges\n        setValue={(...args) => {\n          setValue(...args);\n          setPerms(activeRole!.permissions);\n          setHoisted(activeRole!.hoisted);\n        }}\n        onSave={onSave}\n        obj={getValues()} />  \n    </div>\n  );\n}\n \nexport default GuildSettingsRoles;","import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSnackbar } from 'notistack';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from '../../../store/ui';\n\nconst EscButton = () => {\n  const dispatch = useDispatch();\n  const { closeSnackbar } = useSnackbar();\n\n  const onClick = () => {\n    dispatch(closeModal);\n    closeSnackbar('saveChanges');\n  };\n  \n  return (\n    <div\n      className=\"rounded-full ring ring-gray-500 cursor-pointer border-white rounded-full px-2 w-16 mt-14\"\n      onClick={onClick}>\n      <FontAwesomeIcon icon={faTimes} color=\"var(--muted)\" />\n      <span className=\"pl-1.5 muted\">ESC</span>\n    </div>\n  );\n}\n\nexport default EscButton;","import { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { getGuildInvites } from '../../../store/guilds';\nimport { deleteInvite } from '../../../store/invites';\nimport { openSaveChanges } from '../../../store/ui';\nimport CircleButton from '../../utils/buttons/circle-button';\n\nconst GuildSettingsInvites: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { guildId }: any = useParams();\n  const invites = useSelector(getGuildInvites(guildId));\n  \n  const Invites = () => (\n    <div className=\"mt-2\">\n      {invites.map(i => (\n        <div className=\"w-full mb-3\">\n          <strong>{i.id}</strong>\n          <span className=\"float-right\">\n            <button\n              type=\"button\"\n              className=\"danger rounded-full ring ring-red-500 px-2\"\n              onClick={() => dispatch(deleteInvite(i.id))}>x</button>\n          </span>\n        </div>\n      ))}\n      {!invites.length && <span>No invites created.</span>}\n    </div>\n  );\n  \n  return (\n    <form\n      onChange={() => dispatch(openSaveChanges(true))}\n      className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <header>\n        <h1 className=\"text-xl font-bold inline\">Invites</h1>\n      </header>\n    \n      <Invites />\n    </form>    \n  );\n}\n \nexport default GuildSettingsInvites;","import { FunctionComponent } from 'react';\nimport TabLink from './tab-link';\n\ntype Tab = { name: string, id: string, perm?: string };\n\ninterface NavTabsProps {\n  className?: string;\n  tabs: Tab[];\n  tab: string;\n  setTab: React.Dispatch<React.SetStateAction<string>>;\n  predicate?: (t: Tab) => boolean;\n}\n \nconst NavTabs: FunctionComponent<NavTabsProps> = ({ className, tabs, setTab, tab, predicate }) => {\n  return (\n    <div className={className}>\n      {tabs.map(t => (!predicate || predicate?.(t)) && (\n        <TabLink\n          tab={tab}\n          setTab={setTab}\n          id={t.id}\n          key={t.id}>{t.name}</TabLink>\n      ))}\n    </div>\n  );\n}\n \nexport default NavTabs;","import { useSelector } from 'react-redux';\nimport Category from '../../utils/category';\nimport Modal from '../modal';\nimport { useState } from 'react';\nimport GuildSettingsOverview from './guild-settings-overview';\nimport GuildSettingsRoles from './guild-settings-roles';\nimport EscButton from '../../utils/buttons/esc-button';\nimport usePerms from '../../../hooks/use-perms';\nimport GuildSettingsInvites from './guild-settings-invites';\nimport NavTabs from '../../utils/nav-tabs';\n\nconst GuildSettings: React.FunctionComponent = () => {\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const [tab, setTab] = useState('overview');\n  const perms = usePerms();\n\n  return (guild) ? (\n    <Modal typeName={'GuildSettings'} size=\"full\">\n      <div className=\"grid grid-cols-12 h-full\">\n        <div className=\"col-span-4 bg-bg-secondary\">\n          <nav className=\"float-right flex-grow py-14 w-48 my-1 mr-4\">\n            <Category\n              className=\"muted px-2.5 pb-1.5\"\n              title={guild.name} />\n          <NavTabs\n            tabs={[\n              { perm: 'MANAGE_GUILD', name: 'Overview', id: 'overview' },\n              { perm: 'MANAGE_ROLES', name: 'Roles', id: 'roles' },\n              { perm: 'MANAGE_INVITES', name: 'Invites', id: 'invites' },\n            ]}\n            tab={tab}\n            setTab={setTab}\n            predicate={t => perms.can(t.perm as any, guild.id)} />\n          </nav>\n        </div>\n\n        <div className=\"col-span-6 h-full\">\n          {tab === 'overview' && <GuildSettingsOverview />}\n          {tab === 'roles' && <GuildSettingsRoles />}\n          {tab === 'invites' && <GuildSettingsInvites />}\n        </div>\n\n        <div className=\"col-span-2 h-full\">\n          <EscButton />\n        </div>\n      </div>\n    </Modal>\n  ) : null;\n};\n \nexport default GuildSettings;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown } from '@fortawesome/free-solid-svg-icons';\nimport { getMemberHighestRole } from '../../store/roles';\nimport { useSelector } from 'react-redux';\n\nexport interface UsernameProps {\n  user: Entity.User;\n  guild?: Entity.Guild;\n  size?: 'md' | 'lg';\n}\n \nconst Username: React.FunctionComponent<UsernameProps> = ({ guild, user, size = 'md' }) => {\n  const highestRole = useSelector(getMemberHighestRole(guild?.id, user.id));\n\n  const userOwnsGuild = guild?.ownerId === user.id;\n  const discrim = user.discriminator\n    .toString()\n    .padStart(4, '0');\n  const isOnline = user.status === 'ONLINE';\n\n  const UserPresence = () => {\n    const blob = {\n      color: (isOnline) ? 'bg-success' : 'bg-gray-500',\n      size: (size === 'lg') ? 'h-6 w-6' : 'h-3.5 w-3.5',\n    };\n\n    return (\n      <span className=\"rounded-full absolute flex -right-0.5 -bottom-0.5\">\n        <span\n          style={{ border: '2px solid var(--bg-secondary)' }}\n          className={`relative inline-flex rounded-full px-1 ${blob.size} ${blob.color}`} />\n      </span>\n    );\n  }\n\n  return (\n    <div className={`flex items-center px-2 ${!isOnline && 'opacity-50'}`}>\n      <div className=\"relative avatar mr-2\">\n        <UserPresence />\n        <img\n          className={(size === 'md')\n            ? `select-none rounded-full w-8 h-8`\n            : `select-none rounded-full w-20 h-20`}\n          src={`${process.env.REACT_APP_CDN_URL}${user.avatarURL}`} />\n      </div>\n      <div className=\"tag leading-4\">\n        <h4 className={`font-bold ${size === 'lg' ? 'text-lg' : 'text-sm'}`}>\n          <span\n            style={{ color: highestRole?.color ?? 'var(--secondary)' }}\n            className={guild && 'font-light text-base'}>{user.username}</span>\n          <span className=\"text-yellow-400 ml-1\">\n            {userOwnsGuild && <FontAwesomeIcon icon={faCrown} />}\n          </span>\n        </h4>\n        {!guild && <div className={`discriminator ${size === 'lg' ? 'text-sm' : 'text-xs'}`}>#{discrim}</div>}\n      </div>\n    </div>\n  );\n}\n \nexport default Username;","import { faBug, faGavel, faSun } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FunctionComponent, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Username from '../user/username';\nimport NavTabs from '../utils/nav-tabs';\nimport Modal from './modal';\n\nconst UserProfile: FunctionComponent = () => {\n  const user = useSelector((s: Store.AppState) => s.ui.activeUser);\n  const [tab, setTab] = useState('info');\n\n  type BadgeIcon = {\n    [k in UserTypes.Badge]: { color: string, icon: any, title: string }\n  };\n  const badgeIcons: BadgeIcon = {\n    'BUG_1': {\n      color: 'bronze',\n      icon: faBug,\n      title: 'Has destroyed a few bugs.',\n    },\n    'BUG_2': {\n      color: 'silver',\n      icon: faBug,\n      title: 'Has destroyed many bugs.',\n    },\n    'BUG_3': {\n      color: 'gold',\n      icon: faBug,\n      title: 'Are there still bugs left?'\n    },\n    'OG': {\n      color: 'orange',\n      icon: faSun,\n      title: 'Was here since the very beginning',\n    },\n    'STAFF': {\n      color: 'var(--primary)',\n      icon: faGavel,\n      title: 'Epic',\n    },\n  };\n\n  const UserBadges = () => (user) ? (\n    <div className=\"px-3 pt-2\">\n      {user.badges.map(b => {\n        const { color, icon, title } = badgeIcons[b];\n        return (\n          <FontAwesomeIcon\n            title={title}\n            className=\"pr-3\"\n            style={{ color }}\n            size=\"2x\"\n            icon={icon} />\n        );\n      })}\n    </div>\n  ) : null;\n\n  const UserInfo = () => (<div />);\n  // guilds that self user and active user are both in\n  const UserMutualGuilds = () => (\n    <p>Mutual guilds will go here when ADAMJR adds it.</p>\n  );\n\n  \n  return (user) ? (\n    <Modal\n      typeName={'UserProfile'}\n      size=\"md\">\n      <header className=\"bg-bg-tertiary\">\n        <div className=\"p-5\">\n          <Username size=\"lg\" user={user} />\n          <UserBadges />\n        </div>\n        <hr className=\"border-bg-primary\" />\n        <NavTabs\n          className=\"p-2\"\n          tab={tab}\n          setTab={setTab}\n          tabs={[\n            { name: 'Info', id: 'info' },\n            { name: 'Mutual Guilds', id: 'mutualGuilds' },\n          ]} />\n      </header>\n      <main className=\"p-4\">\n        {(tab === 'info') && <UserInfo />}\n        {(tab === 'mutualGuilds') && <UserMutualGuilds />}\n      </main>\n    </Modal>\n  ) : null;\n}\n \nexport default UserProfile;","import { createSlice } from '@reduxjs/toolkit';\n\nconst get = (key: keyof Store.AppState['config']) =>\n  JSON.parse(localStorage.getItem(`config.${key as string}`) as any);\nconst set = (key: keyof Store.AppState['config'], value: any) =>\n  JSON.parse(localStorage.setItem(`config.${key as string}`, value) as any);\n\nconst slice = createSlice({\n  name: 'config',\n  initialState: {\n    devMode: get('devMode') ?? false,\n    memberListToggled: get('memberListToggled') ?? true,\n  } as Store.AppState['config'],\n  reducers: {\n    toggleDevMode: (config) => {\n      const value = !config.devMode;\n      config.devMode = value;\n    },\n    toggleMemberList: (config) => {\n      const value = !config.memberListToggled;\n      config.memberListToggled = value;\n    },\n  }\n})\nconst actions = slice.actions;\nexport default slice.reducer;\n\nexport const toggleDevMode = () => (dispatch, getState: () => Store.AppState) => {\n  const config = getState().config;\n\n  dispatch(actions.toggleDevMode());\n  set('devMode', !config.devMode);\n}\nexport const toggleMemberList = () => (dispatch, getState: () => Store.AppState) => {\n  const config = getState().config;\n\n  dispatch(actions.toggleMemberList());\n  set('memberListToggled', !config.memberListToggled);\n}","export const headers = () => ({\n  'Authorization': `Bearer ${token()}`,\n});\n\nexport const token = () => localStorage.getItem('token');","import { createSlice, createSelector } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { unique } from './utils/filter';\nimport { token } from './utils/rest-headers';\n\nconst slice = createSlice({\n  name: 'users',\n  initialState: [] as Store.AppState['entities']['users'],\n  reducers: {\n    fetched: (users, { payload }: Store.Action<Entity.User[]>) => {\n      users.push(...payload.filter(unique(users)));\n    },\n    updated: (users, { payload }: Store.Action<WS.Args.UserUpdate>) => {\n      const user = users.find(u => u.id === payload.userId);\n      if (user) Object.assign(user, payload.partialUser);\n    },\n    deleted: (users, { payload }: Store.Action<WS.Args.UserDelete>) => {\n      const index = users.findIndex(u => u.id === payload.userId);\n      users.splice(index, 1);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const updateSelf = (payload: Partial<Entity.User>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'USER_UPDATE',\n    data: { ...payload, token: token() } as WS.Params.UserUpdate,\n  }));\n}\n  \nexport const toggleBlockUser = (userId: string) => (dispatch, getState: () => Store.AppState) => {\n  console.log('hi');  \n  const user = getState().auth.user!;\n  const ignored = JSON.parse(JSON.stringify(user.ignored));\n  ignored.userIds = ignored.userIds ?? [];\n\n  if (!ignored.userIds.includes(userId))\n    ignored.userIds.push(userId);\n  else {\n    const index = ignored.userIds.indexOf(userId);\n    ignored.userIds.splice(index, 1);\n  }\n\n  dispatch(api.wsCallBegan({\n    event: 'USER_UPDATE',\n    data: { token: token(), ignored } as WS.Params.UserUpdate,\n  }));  \n}\n\nexport const deleteSelf = () => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'USER_DELETE',\n    data: { token: token() } as WS.Params.UserDelete,\n  }));\n}\n\nexport const getUser = (id: string) =>\n  createSelector<Store.AppState, Entity.User[], Entity.User>(\n    state => state.entities.users,\n    users => users.find(u => u.id === id) ?? {\n      discriminator: 0,\n      username: 'Unknown',\n      avatarURL: '/avatars/unknown.png',\n    } as Entity.User,\n  );","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleDevMode } from '../../../store/config';\nimport { openSaveChanges } from '../../../store/ui';\nimport { updateSelf, deleteSelf } from '../../../store/users';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Input from '../../utils/input/input';\nimport Toggle from '../../utils/input/toggle';\nimport SaveChanges from '../../utils/save-changes';\n\nconst UserSettingsOverview: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((s: Store.AppState) => s.auth.user)!;\n  const { register, handleSubmit, setValue } = useForm();\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  const onSave = (e) => {\n    const onUpdate = (payload) => dispatch(updateSelf(payload));\n    handleSubmit(onUpdate)(e);\n  };\n  const onDelete = () => {\n    const confirmation = window.confirm('Are you sure you want to delete your user?');\n    if (confirmation) dispatch(deleteSelf());\n  }\n\n  return (\n    <form\n      onChange={() => dispatch(openSaveChanges(true))}\n      className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <header>\n        <h1 className=\"text-xl font-bold inline\">My Account</h1>\n      </header>\n\n      <section className=\"w-1/3\">\n        <div className=\"pt-5\">\n          <Input\n            label=\"Username\"\n            name=\"username\"\n            register={register}\n            options={{ value: user.username }} />\n        </div>\n\n        <div className=\"pt-5\">\n          <Input\n            label=\"Email\"\n            name=\"email\"\n            register={register}\n            options={{ value: user.email }} />\n        </div>\n\n        <div className=\"pt-5\">\n          <Input\n            label=\"Avatar URL\"\n            name=\"avatarURL\"\n            register={register}\n            options={{ value: user.avatarURL }} />\n        </div>\n      </section>\n\n      <Category\n        className=\"py-2 mt-5\"\n        title=\"Advanced Settings\" />\n\n      <section>\n        <div className=\"w-1/3 pb-5\">\n          <label htmlFor=\"devMode\">Dev Mode</label>\n          <Toggle\n            onChange={(e) => e.stopPropagation()}\n            onClick={() => dispatch(toggleDevMode())}\n            checked={devMode}\n            className=\"float-right\"\n            id=\"devMode\" />\n        </div>\n\n        <NormalButton\n          onClick={handleSubmit(onDelete)}\n          className=\"bg-danger\">Delete</NormalButton>\n      </section>\n\n      <SaveChanges\n        setValue={setValue}\n        onSave={onSave}\n        obj={user} />\n    </form>    \n  );\n}\n \nexport default UserSettingsOverview;","import { createSlice } from '@reduxjs/toolkit';\nimport { State } from 'react-select/src/Select';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { token } from './utils/rest-headers';\n\nconst slice = createSlice({\n  name: 'auth',\n  initialState: {\n    attemptedLogin: false,\n    shouldVerify: false,\n  } as Store.AppState['auth'],\n  reducers: {\n    ready: (auth, { payload }: Store.Action<WS.Args.Ready>) => {\n      auth.user = payload.user;\n    },\n    updatedUser: (auth, { payload }: Store.Action<WS.Args.UserUpdate>) => {\n      Object.assign(auth.user, payload.partialUser);\n    },\n    loggedIn: (auth) => { auth.attemptedLogin = true },\n    loggedOut: (auth) => {\n      delete auth.user;\n      auth.attemptedLogin = false;\n      auth.shouldVerify = false;\n    },\n    shouldVerify: (auth) => { auth.shouldVerify = true }\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const ready = () => (dispatch, getState: () => Store.AppState) => {\n  if (getState().auth.user || !token()) return;\n\n  dispatch(api.wsCallBegan({\n    event: 'READY',\n    data: { token: token() } as WS.Params.Ready,\n  }));\n}\n\n// handle side effects here\nexport const loginUser = (data: REST.To.Post['/auth/login']) => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [actions.shouldVerify.type],\n    method: 'post',\n    data,\n    url: `/auth/login`,\n    // TODO: replace with snackbar\n    callback: (payload) => alert(payload.message),\n  }));\n}\n\nexport const forgotPasswordEmail = (email: string) => (dispatch) => {\n  if (!email) return;\n  \n  dispatch(api.restCallBegan({\n    onSuccess: [],\n    url: `/auth/email/forgot-password?email=${email}`,\n  }));\n}\n\nexport const logoutUser = () => (dispatch) => {\n  dispatch(actions.loggedOut());\n  localStorage.removeItem('token');\n}\n\nexport const registerUser = (data: REST.To.Post['/auth/register']) => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [actions.loggedIn.type],\n    method: 'post',\n    data,\n    url: `/auth/register`,\n    callback: (payload) => {\n      localStorage.setItem('token', payload);\n      dispatch(ready());\n    },\n  }));\n}\n\nexport const verifyCode = (code: string) => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [],\n    url: `/auth/verify?code=${code}`,\n    callback: ({ message, token }: REST.From.Get['/auth/verify']) => {\n      // TODO: add REST snackbar\n      if (message) alert(message);\n      if (!token) return;\n      \n      localStorage.setItem('token', token);\n      dispatch(ready());\n    },\n  }))\n}\n\nexport const changePassword = (oldPassword: string, newPassword: string) => (dispatch, getState: () => Store.AppState) => {\n  const user = getState().auth.user!;\n  \n  dispatch(api.restCallBegan({\n    onSuccess: [],\n    method: 'post',\n    url: `/auth/change-password`,\n    data: { email: user.email, oldPassword, newPassword },\n    callback: ({ message, token }: REST.From.Post['/auth/change-password']) => {\n      // TODO: add REST snackbar\n      if (message) alert(message);\n      if (!token) return;\n      \n      localStorage.setItem('token', token);\n    },\n  }))\n}","import { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changePassword } from '../../../store/auth';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Input from '../../utils/input/input';\n\nconst UserSettingsSecurity: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const passwordForm = useForm();\n\n  const onChangePassword = (e) => {\n    const { oldPassword, newPassword } = passwordForm.getValues();\n    const onUpdate = () => dispatch(changePassword(oldPassword, newPassword));\n    passwordForm.handleSubmit(onUpdate)(e);\n  };\n\n  return (\n    <div className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <header>\n        <h1 className=\"text-xl font-bold inline\">Account Security</h1>\n      </header>\n\n      <Category\n        className=\"py-2 mt-5\"\n        title=\"Change Password\" />\n\n      <section className=\"w-1/3\">\n        <div className=\"secondary\">\n          <FontAwesomeIcon icon={faInfoCircle} />\n          <span className=\"ml-1\">Your email must be verified to be able to change the password.</span>\n        </div>\n\n        <div className=\"pt-5\">\n          <Input\n            label=\"Old Password\"\n            name=\"oldPassword\"\n            type=\"password\"\n            register={passwordForm.register} />\n        </div>\n\n        <div className=\"pt-5\">\n          <Input\n            label=\"New Password\"\n            name=\"newPassword\"\n            type=\"password\"\n            register={passwordForm.register} />\n        </div>\n\n      <div className=\"flex justify-center w-full mt-4\">\n        <NormalButton\n          onClick={passwordForm.handleSubmit(onChangePassword)}\n          className=\"bg-warning\">Change</NormalButton>\n        </div>\n      </section>\n    </div>    \n  );\n}\n \nexport default UserSettingsSecurity;","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport EscButton from '../../utils/buttons/esc-button';\nimport Category from '../../utils/category';\nimport NavTabs from '../../utils/nav-tabs';\nimport Modal from '../modal';\nimport UserSettingsOverview from './user-settings-overview';\nimport UserSettingsSecurity from './user-settings-security';\n\nconst UserSettings: React.FunctionComponent = () => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const [tab, setTab] = useState('overview');\n\n  return (user) ? (\n    <Modal\n      typeName={'UserSettings'}\n      size=\"full\">\n      <div className=\"grid grid-cols-12 h-full\">\n        <div className=\"col-span-4 bg-bg-secondary\">\n          <nav className=\"float-right flex-grow py-14 w-48 my-1 mr-4\">\n            <Category\n              className=\"normal px-2.5 pb-1.5\"\n              title=\"User Settings\" />\n            <NavTabs\n              tab={tab}\n              setTab={setTab}\n              tabs={[\n                { name: 'Overview', id: 'overview' },\n                { name: 'Security', id: 'security' },\n              ]} />\n\n            <div className=\"rounded-sm bg-bg-modifier-accent h-px w-42 my-2 mx-2.5 \" />\n\n            <Link\n              to=\"/logout\"\n              className=\"danger flex items-center rounded py-1.5 px-2.5 h-8 mb-0.5\">Logout</Link>\n          </nav>\n        </div>\n\n        <div className=\"col-span-6 h-full\">\n          {tab === 'overview' && <UserSettingsOverview />}\n          {tab === 'security' && <UserSettingsSecurity />}\n        </div>\n\n        <div className=\"col-span-2 h-full\">\n          <EscButton />\n        </div>\n      </div>\n    </Modal>\n  ) : null;\n}\n\nexport default UserSettings;","import { useSnackbar } from 'notistack';\nimport { FunctionComponent, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\ninterface UIDialogProps {\n  \n}\n \nconst UIDialog: FunctionComponent<UIDialogProps> = () => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const dialog = useSelector((s: Store.AppState) => s.ui.openDialog);\n\n  useEffect(() => {\n    if (!dialog) return closeSnackbar('dialog');\n    if (dialog.content === 'User not logged in') return;\n\n    alert(dialog.content);\n    // FIXME:\n    // enqueueSnackbar({\n    //   anchorOrigin: { vertical: 'bottom', horizontal: 'center' },\n    //   content: dialog.content,\n    //   key: 'dialog',\n    //   persist: true,\n    //   variant: dialog.variant,   \n    // });\n  }, [dialog]);\n  \n  return null;\n}\n \nexport default UIDialog;","import io from 'socket.io-client';\nimport { WS } from '../types/ws';\n\nconst ws = (io as any).connect(process.env.REACT_APP_ROOT_API_URL, {\n  secure: true,\n  path: `/ws`,\n  transports: ['websocket', 'polling', 'flashsocket'],\n});\n\nws.io.on('open', () => console.log('Connected to WS Server'));\n\nexport default ws as WSClient;\n\ninterface WSClient {\n  emit: <K extends keyof WS.To>(event: K, callback: (args: WS.To[K]) => any) => any;\n  on: <K extends keyof WS.From>(event: K | 'error' | 'disconnect', callback: (args: WS.From[K]) => any) => any;\n  off: (event: string, callback?: any) => any;\n  disconnect: () => any;\n}","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport moment from 'moment';\nimport { actions as api } from './api';\n\nconst slice = createSlice({\n  name: 'typing',\n  initialState: [] as Store.AppState['entities']['typing'],\n  reducers: {\n    userTyped: (typing, { payload }: Store.Action<{ channelId: string, userId: string }>) => {      \n      typing.push(payload);\n    },\n    userStoppedTyping: (typing, { payload }: Store.Action<{ channelId: string, userId: string }>) => {\n      const index = getIndex(typing, payload.userId, payload.channelId);\n      typing.splice(index, 1);\n    },\n  },\n});\n\nconst getIndex = (typing: any[], userId: string, channelId: string) => {\n  return typing.findIndex(t =>\n    t.channelId === channelId\n    && t.userId === userId)\n}\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const getTypersInChannel = (channelId: string) => createSelector<any, any, any>(\n  state => state.entities.typing,\n  typing => typing.filter(t => t.channelId === channelId),\n) as (channelId: string) => Store.AppState['entities']['typing'];\n\nlet lastTypedAt: Date;\n\nexport const startTyping = (channelId: string) => (dispatch, getState: () => Store.AppState) => {\n  const secsAgo = moment(new Date()).diff(lastTypedAt, 'seconds');\n  if (lastTypedAt && secsAgo < 5) return;\n\n  lastTypedAt = new Date();\n\n  dispatch(api.wsCallBegan({\n    event: 'TYPING_START',\n    data: { channelId },\n  }));\n}","import { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'meta',\n  initialState: {\n    fetchedEntities: false,\n    hasListenedToWS: false,\n  } as Store.AppState['meta'],\n  reducers: {\n    fetchedEntities: (meta) => {\n      meta.fetchedEntities = true;\n    },\n    listenedToWS: (meta) => {\n      meta.hasListenedToWS = true;\n    },\n  }\n});\nexport const actions = slice.actions;\nexport default slice.reducer;","import { createSlice, createSelector } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { unique } from './utils/filter';\nimport { headers } from './utils/rest-headers';\n\nconst slice = createSlice({\n  name: 'messages',\n  initialState: {\n    fetched: {},\n    list: [] as Entity.Message[],\n  } as Store.AppState['entities']['messages'],\n  reducers: {\n    fetched: ({ list, fetched }, { payload }: Store.Action<Entity.Message[]>) => {\n      list.push(...payload.filter(unique(list)));\n      if (payload.length)\n        fetched[payload[0].channelId] = 'testing';\n    },\n    created: ({ list }, { payload }: Store.Action<WS.Args.MessageCreate>) => {\n      list.push(payload.message);\n    },\n    deleted: ({ list }, { payload }: Store.Action<WS.Args.MessageDelete>) => {\n      const index = list.findIndex(m => m.id === payload.messageId);\n      list.splice(index, 1);\n    },\n    updated: ({ list }, { payload }: Store.Action<WS.Args.MessageUpdate>) => {\n      const message = list.find(m => m.id === payload.message.id);\n      Object.assign(message, payload.message);\n    },\n  },\n});\n\nexport const getChannelMessages = (channelId: string) =>\n  createSelector<Store.AppState, Entity.Message[], Entity.Message[]>(\n    state => state.entities.messages.list,\n    messages => messages.filter(m => m.channelId === channelId),\n  );\n\n// TODO: add lazy message loading\nexport const fetchMessages = (channelId: string) => (dispatch, getState: () => Store.AppState) => {\n  const isCached = getState().entities.messages.list.some(c => c.channelId === channelId);\n  if (isCached) return;\n\n  dispatch(api.restCallBegan({\n    onSuccess: [actions.fetched.type],\n    url: `/channels/${channelId}/messages?back=100`,\n    headers: headers(),\n  }));\n}\n\nexport const createMessage = (channelId: string, payload: Partial<Entity.Message>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'MESSAGE_CREATE',\n    data: { ...payload, channelId },\n  }));\n}\n\nexport const updateMessage = (id: string, payload: Partial<Entity.Message>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'MESSAGE_UPDATE',\n    data: { messageId: id, ...payload },\n  }));\n}\n\nexport const deleteMessage = (id: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'MESSAGE_DELETE',\n    data: { messageId: id },\n  }));\n}\n\nexport const actions = slice.actions;\nexport default slice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\ntype PingPayload = { channelId: string, guildId: string };\ntype Pings = { [guildId: string]: string[] };\n\nconst slice = createSlice({\n  name: 'pings',\n  initialState: {} as Pings,\n  reducers: {\n    initialized: (pings, { payload }: Store.Action<Pings>) => {\n      Object.assign(pings, payload);\n    },\n    added: (pings, { payload }: Store.Action<PingPayload>) => {\n      pings[payload.guildId].push(payload.channelId);\n    },\n    channelMarkedAsRead: (pings, { payload }: Store.Action<PingPayload>) => {\n      const guildPings = pings[payload.guildId];\n      const index = guildPings.indexOf(payload.channelId);\n      guildPings.splice(index, 1);\n    },\n    guildMarkedAsRead: (pings, { payload }: Store.Action<PingPayload>) => {\n      pings[payload.guildId] = [];\n    },\n  },\n})\n\nexport const actions = slice.actions;\nexport default slice.reducer; \n\nexport const initPings = () => (dispatch, getState: () => Store.AppState) => {\n  const user = getState().auth.user!;\n  const channels = getState().entities.channels;\n  const pings: Pings = {};\n\n  for (const channel of channels) {\n    const lastReadId = user.lastReadMessageIds[channel.id];\n    if (true || lastReadId === channel.lastMessageId) {\n      pings[channel.id] = pings[channel.id] ?? [];\n      pings[channel.id].push(channel.id);\n    }\n  }\n  dispatch(actions.initialized(pings));\n}\n\nexport const addPing = (channelId: string) => (dispatch, getState: () => Store.AppState) => {\n  const guildId = getState().entities.channels\n    .find(c => c.id === channelId)!.guildId;\n  dispatch(actions.added({ channelId, guildId }));\n}","import { useDispatch, useSelector, useStore } from 'react-redux';\nimport ws from '../services/ws-service';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { actions as users, getUser } from '../store/users';\nimport { actions as meta } from '../store/meta';\nimport { actions as uiActions } from '../store/ui';\nimport { actions as invites } from '../store/invites';\nimport { actions as members, getSelfMember } from '../store/members';\nimport { actions as roles } from '../store/roles';\nimport { actions as typing } from '../store/typing';\nimport { actions as guilds, getGuild } from '../store/guilds';\nimport { actions as messages } from '../store/messages';\nimport { actions as channels } from '../store/channels';\nimport { actions as auth, logoutUser } from '../store/auth';\nimport { actions as pings, addPing } from '../store/pings';\nimport { useSnackbar } from 'notistack';\n\nconst WSListener: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const store = useStore();\n  const hasListened = useSelector((s: Store.AppState) => s.meta.hasListenedToWS);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const state = () => store.getState() as Store.AppState;\n\n  // TODO: make alphabetical order\n  useEffect(() => {\n    if (hasListened) return;    \n\n    ws.on('error', (error: any) => {      \n      enqueueSnackbar(`${error.data?.message ?? error.message}.`, {\n        anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n        variant: 'error',\n        autoHideDuration: 5000,\n      });\n    });\n\n    // add channel to guilds.channels\n    ws.on('CHANNEL_CREATE', (args) => {\n      // if we created it, we want to navigate there\n      // we'd expect the user to exist, as they should be logged in to receive ws events\n      const { auth, ui } = state();      \n      const selfCreated = args.creatorId === auth.user!.id;\n      \n      // we cannot go to the channel if not in store \n      dispatch(channels.created(args));\n\n      if (selfCreated && ui.activeGuild) {\n        dispatch(uiActions.closedModal());\n        history.push(`/channels/${ui.activeGuild.id}/${args.channel.id}`);\n      }\n    });\n    ws.on('CHANNEL_DELETE', (args) => {\n      // if in channel, go away from it\n      const { ui } = state();\n      const inChannel = args.channelId === ui.activeChannel?.id;\n\n      if (inChannel && ui.activeGuild)\n        history.push(`/channels/${ui.activeGuild.id}`);\n\n      dispatch(channels.deleted(args));\n    });\n    ws.on('GUILD_CREATE', (args) => {\n      dispatch(users.fetched(args.users)); // this before members\n      dispatch(channels.fetched(args.channels));\n      dispatch(members.fetched(args.members));\n      dispatch(roles.fetched(args.roles)); // this after members\n      dispatch(guilds.created(args));\n      dispatch(uiActions.closedModal());\n      history.push(`/channels/${args.guild.id}`);\n    });\n    ws.on('GUILD_DELETE', (args) => {\n      const { ui } = state();\n      const guildIsActive = args.guildId === ui.activeGuild?.id;\n      if (guildIsActive) {\n        dispatch(uiActions.closedModal());\n        history.push('/channels/@me');\n      }\n      dispatch(guilds.deleted(args));\n      // clean up leaving guild mess\n      const memberId = getSelfMember(args.guildId)(state())!.id;\n      dispatch(members.removed({ memberId }));\n    });\n    // listen to passive events (not received by api middleware)\n    ws.on('GUILD_MEMBER_ADD', (args) => {\n      // we not getting other users when joining guild\n      dispatch(users.fetched([args.user]));\n      dispatch(members.added(args));      \n    });\n    ws.on('GUILD_MEMBER_UPDATE', (args) => dispatch(members.updated(args)));\n    // user may be in mutual guilds, and therefore not removed from global user cache\n    ws.on('GUILD_MEMBER_REMOVE', (args) => dispatch(members.removed(args)));\n    ws.on('GUILD_ROLE_CREATE', (args) => dispatch(roles.created(args)));\n    ws.on('GUILD_ROLE_DELETE', (args) => dispatch(roles.deleted(args)));\n    ws.on('GUILD_ROLE_UPDATE', (args) => dispatch(roles.updated(args)));\n    ws.on('GUILD_UPDATE', (args) => dispatch(guilds.updated(args)));\n    ws.on('INVITE_CREATE', (args) => {\n      dispatch(invites.created(args));\n      dispatch(uiActions.focusedInvite(args.invite));\n    });\n    ws.on('MESSAGE_CREATE', (args) => {\n      const selfUser = state().auth.user!;\n      const isBlocked = selfUser.ignored?.userIds.includes(args.message.authorId);\n      if (isBlocked) return;\n\n      dispatch(messages.created(args));\n      \n      const { channelId } = args.message;\n      const { activeChannel } = state().ui;\n      if (activeChannel && activeChannel.id !== channelId)\n        addPing(channelId);\n    });\n    ws.on('MESSAGE_DELETE', (args) => dispatch(messages.deleted(args)));\n    ws.on('MESSAGE_UPDATE', (args) => dispatch(messages.updated(args)));\n    ws.on('PRESENCE_UPDATE', ({ userId, status }) =>\n      dispatch(users.updated({ userId, partialUser: { status } })));\n    ws.on('READY', (args) => {\n      dispatch(auth.ready(args));\n      dispatch(users.fetched([args.user]));\n    });\n    ws.on('TYPING_START', (args) => {\n      dispatch(typing.userTyped(args));\n\n      const timeoutMs = 5000;\n      setTimeout(() => dispatch(typing.userStoppedTyping(args)), timeoutMs);\n    });\n    ws.on('USER_DELETE', () => {\n      ws.disconnect();\n      history.push('/');\n      dispatch(logoutUser());\n    });\n    ws.on('USER_UPDATE', (args) => {      \n      dispatch(auth.updatedUser(args));\n      dispatch(users.updated(args));\n    });\n\n    dispatch(meta.listenedToWS());\n  }, [hasListened]);\n  \n  return null;\n}\n \nexport default WSListener;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions as ui } from '../../store/ui';\nimport CreateChannel from '../modals/create-channel';\nimport CreateGuild from '../modals/create-guild';\nimport CreateInvite from '../modals/create-invite';\nimport GuildSettings from '../modals/guild-settings/guild-settings';\nimport UserProfile from '../modals/user-profile';\nimport UserSettings from '../modals/user-settings/user-settings';\nimport UIDialog from '../utils/ui-dialog';\nimport WSListener from '../ws-listener';\n\nexport type PageWrapperProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement> & { pageTitle?: string; };\n\n// all separate pages should be wrapped by this\nconst PageWrapper: React.FunctionComponent<PageWrapperProps> = (props) => {\n  const dispatch = useDispatch();\n  const dropdown = useSelector((s: Store.AppState) => s.ui.openDropdown);\n  \n  useEffect(() => {\n    document.title = props.pageTitle ?? 'accord.app';\n  }, []);\n\n  const onClick = () => dropdown && dispatch(ui.toggleDropdown({}));\n\n  return (\n    <div onClick={onClick}\n      {...props}>\n      {props.children}\n      <WSListener />\n      <UIDialog />\n      {/* modals */}\n      <CreateChannel />\n      <CreateGuild />\n      <CreateInvite />\n      <GuildSettings />\n      <UserSettings />\n      <UserProfile />\n    </div>\n  );\n}\n \nexport default PageWrapper;","export default __webpack_public_path__ + \"static/media/chat.304c50bf.svg\";","export default __webpack_public_path__ + \"static/media/devices.99f78ca4.svg\";","export default __webpack_public_path__ + \"static/media/friends.547620e1.svg\";","export default __webpack_public_path__ + \"static/media/secure.7370ac46.svg\";","import { Link } from 'react-router-dom';\nimport Navbar from '../navigation/navbar';\nimport PageWrapper from './page-wrapper';\nimport NormalButton from '../utils/buttons/normal-button';\nimport Chat from '../../assets/home/chat.svg';\nimport Devices from '../../assets/home/devices.svg';\nimport Friends from '../../assets/home/friends.svg';\nimport Secure from '../../assets/home/secure.svg';\n\nimport './home-page.scoped.css';\n\nconst HomePage: React.FunctionComponent = () => {\n  const ImageCard = (props: { title: string, src: any }) => (\n    <div>\n      <h3 className=\"text-center text-1xl font-black font mb-4\">{props.title}</h3>\n      <img className=\"w-44 inline\" src={props.src} alt=\"Chat\" />\n    </div>\n  );\n\n  let keys: string[] = [];\n  document.addEventListener('keyup', (e) => {\n    keys.push(e.key);\n    if (!keys.join('').endsWith('testing123')) return;\n\n    try {\n      document.querySelector('h1')!.textContent = 'Easteregg++';\n      document.querySelector('.lead')!.textContent = 'Are you happy now?';\n    } catch {}\n  });\n\n  return (\n    <PageWrapper\n      className=\"z-10 bg-bg-tertiary h-full relative\"\n      pageTitle=\"accord.app | Like Discord but Cooler\">\n      <Navbar />\n      <section className=\"z-10 text-center my-4\">\n        <h1>It's time to ditch Discord and Zoom.</h1>\n        <div className=\"flex justify-center\">\n          <div className=\"lead font-light mt-2 max-w-xl\">\n            All-in-one voice and text chat for you that's free, secure, and works on both your desktop and phone. Stop paying for Discord guild boosts and hassling with Zoom. Simplify your life.\n          </div>\n        </div>\n        <button className=\"font-primary shadow-md bg-green text-dark\">\n          <Link to=\"/login\" >\n            <NormalButton className=\"bg-white text-black rounded w-56 h-11 px-6 mt-8\">Login</NormalButton>\n          </Link>\n        </button>\n        <button className=\"shadow-md bg-green text-dark ml-10\">\n          <Link to=\"/channels/@me\">\n            <NormalButton className=\"text-black bg-success rounded W-56 h-11 px-6 mt-8\">Open Accord in Your Browser</NormalButton>\n          </Link>\n        </button>\n      </section>\n\n      <section\n        title=\"Description may be true for incoming features.\"\n        className=\"absolute top-50 w-1/2 inset-x-1/4 flex justify-between\">\n        <ImageCard src={Chat} title=\"Chat w/ Friends\" />\n        <ImageCard src={Devices} title=\"On Mobile or Desktop\" />\n        <ImageCard src={Friends} title=\"Join or Manage Guilds\" />\n        <ImageCard src={Secure} title=\"Secure\" />\n      </section>\n    </PageWrapper>\n  );\n}\n\nexport default HomePage;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHashtag, faUserFriends } from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleMemberList } from '../../store/config';\n \nconst AppNavbar: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel);\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild);\n  const memberListToggled = useSelector((s: Store.AppState) => s.config.memberListToggled);\n\n  return (\n    <div className=\"shadow-elevation flex items-center h-12 px-5\">\n      {channel && <FontAwesomeIcon\n        icon={faHashtag}\n        className=\"scale-150 mr-2\" />}\n      <h3 className=\"flex-grow font-bold ml-1\">{channel?.name}</h3>\n      {guild && (\n        <FontAwesomeIcon\n          onClick={() => dispatch(toggleMemberList())}\n          icon={faUserFriends}\n          className={`cursor-pointer ${memberListToggled ? 'heading' : 'muted'}`} />)}\n    </div>\n  );\n}\n \nexport default AppNavbar;","import Username from '../../user/username';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { actions as ui } from '../../../store/ui';\nimport UserSettings from '../../modals/user-settings/user-settings';\n \nconst SidebarFooter: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((s: Store.AppState) => s.auth.user)!;\n  \n  return (\n    <div className=\"select-all relative flex items-center bg-bg-secondary-alt py-2\">\n      <Username user={user} />\n      <FontAwesomeIcon\n        onClick={() => dispatch(ui.openedModal('UserSettings'))}\n        className=\"float-right cursor-pointer absolute right-4\"\n        icon={faCog} />\n    </div>\n  );\n}\n \nexport default SidebarFooter;","import { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSelector } from 'react-redux';\n\nexport interface DropdownProps {\n  title: string;\n  type: React.FunctionComponent;\n}\n\nconst Dropdown: React.FunctionComponent<DropdownProps> = (props) => {\n  const dropdown = useSelector((s: Store.AppState) => s.ui.openDropdown);\n\n  return (\n    <div className=\"w-full pt-3\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"flex-grow font-bold pl-2\">{props.title}</h1>\n        <FontAwesomeIcon icon={faChevronDown} />\n      </div>\n      {\n        (dropdown === props.type.name) && \n        <div className=\"absolute bg-bg-floating rounded w-56 p-2 mt-5\">\n          {props.children}\n        </div>\n      }\n    </div>\n  );\n}\n \nexport default Dropdown;","import { faUserPlus, faPlusCircle, faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useDispatch, useSelector } from 'react-redux';\nimport usePerms from '../../hooks/use-perms';\nimport { actions as ui } from '../../store/ui';\nimport CreateChannel from '../modals/create-channel';\nimport CreateInvite from '../modals/create-invite';\nimport GuildSettings from '../modals/guild-settings/guild-settings';\nimport Dropdown from '../utils/dropdown';\n\nconst GuildDropdown: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const perms = usePerms();\n\n  if (!guild) return null;\n\n  return (\n    <Dropdown\n      title={guild.name}\n      type={GuildDropdown}>\n      {perms.can('CREATE_INVITE', guild.id) && (\n        <a className=\"rounded-sm flex items-center justify-between text-sm p-2 h-8 mb-1\"\n          onClick={() => dispatch(ui.openedModal('CreateInvite'))}>\n          <span className=\"primary\">Invite people</span>\n          <FontAwesomeIcon\n            className=\"float-right w-1\"\n            icon={faUserPlus} />\n        </a>\n      )}\n      {perms.can('MANAGE_CHANNELS', guild.id) && (\n        <a className=\"rounded-sm flex items-center justify-between p-2 h-8 text-sm mb-1\"\n          onClick={() => dispatch(ui.openedModal('CreateChannel'))}>\n          <span className=\"font\">Create channel</span>\n          <FontAwesomeIcon\n            className=\"float-right w-1\"\n            icon={faPlusCircle} />\n        </a>\n      )}\n      {perms.can('MANAGE_GUILD', guild.id) && (\n        <a onClick={() => dispatch(ui.openedModal('GuildSettings'))}\n          className=\"rounded-sm flex items-center justify-between p-2 h-8 text-sm\">\n          <span className=\"font\">Guild settings</span>\n          <FontAwesomeIcon\n            className=\"float-right w-1\"\n            icon={faCog} />\n        </a>\n      )}\n    </Dropdown>\n  );\n}\n\nexport default GuildDropdown;","import { ContextMenu, MenuItem } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport usePerms from '../../hooks/use-perms';\nimport { deleteChannel } from '../../store/channels';\nimport DevModeMenuSection from './dev-mode-menu-section';\n\nexport interface ChannelMenusProps {\n  channel: Entity.Channel;\n}\n \nconst ChannelMenu: React.FunctionComponent<ChannelMenusProps> = ({ channel }) => {\n  const dispatch = useDispatch();\n  const { guildId }: any = useParams();\n  const perms = usePerms();\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  return (guildId) ? (\n    <ContextMenu\n      key={channel.id}\n      id={channel.id}\n      className=\"bg-bg-tertiary rounded shadow w-52 p-2\">\n      {perms.can('MANAGE_CHANNELS', guildId) && (\n        <MenuItem\n          className=\"danger cursor-pointer\"\n          onClick={() => dispatch(deleteChannel(guildId!, channel.id))}>\n          <span>Delete channel</span>\n        </MenuItem>\n      )}\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'Channel ID', id: channel.id },\n      ]} />}\n    </ContextMenu>\n  ) : null;\n}\n \nexport default ChannelMenu;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHashtag } from '@fortawesome/free-solid-svg-icons';\nimport SidebarFooter from './sidebar-footer';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { actions as ui } from '../../../store/ui';\nimport GuildDropdown from '../../dropdowns/guild-dropdown';\nimport ChannelMenu from '../../ctx-menus/channel-menu';\nimport { getGuildChannels } from '../../../store/guilds';\nimport usePerms from '../../../hooks/use-perms';\n\nconst SidebarContent: React.FunctionComponent = () => {  \n  const dispatch = useDispatch();\n  const { activeGuild, activeChannel } = useSelector((s: Store.AppState) => s.ui);\n  const guildChannels = useSelector(getGuildChannels(activeGuild?.id));\n  const perms = usePerms();\n  \n  const channels = guildChannels.map(c => (\n    <ContextMenuTrigger key={c.id} id={c.id}>\n      <Link\n        to={`/channels/${activeGuild!.id}/${c.id}`}\n        className={`\n          cursor-pointer flex items-center rounded h-8 p-2 pl-3\n          ${c.id === activeChannel?.id && 'active'}`}>\n        <FontAwesomeIcon\n          className=\"float-left mr-2 scale-150 muted fill-current\"\n          icon={faHashtag} />\n        <span>{c.name}</span>\n      </Link>\n      <ChannelMenu channel={c} />\n    </ContextMenuTrigger>\n  ));\n\n  return (\n    <div className=\"flex flex-col bg-bg-secondary w-60\">\n      <div\n        className=\"items-center shadow-elevation cursor-pointer h-12 pl-2.5 pr-4\"\n        onClick={() => dispatch(ui.toggleDropdown(GuildDropdown))}>\n        <GuildDropdown />\n      </div>\n      <nav className=\"flex-grow px-2 pt-4\">\n        {activeGuild && perms.can('VIEW_CHANNELS', activeGuild.id) && channels}\n      </nav>\n      <SidebarFooter />\n    </div>\n  );\n}\n \nexport default SidebarContent;","import { useLocation } from 'react-router-dom';\n\nimport './sidebar-icon.scoped.css';\n\nexport interface SidebarIconProps {\n  imageURL?: string;\n  name: string;\n  to?: string;\n  classes?: string;\n}\n\nconst SidebarIcon: React.FunctionComponent<SidebarIconProps> = (props) => {\n  let { to, imageURL, name, classes = 'font' } = props;\n  const location = useLocation();\n  if (imageURL)\n    imageURL = `${process.env.REACT_APP_CDN_URL}${imageURL}`;\n\n  const getAbbr = (name: string) => name\n    .split(' ')\n    .map(n => n[0])\n    .join('')\n    .slice(0, 3);\n\n  const Icon = () => (imageURL)\n    ? <img\n        className=\"h-12 w-12\"\n        src={imageURL}\n        alt={name} />\n    : <span className={`select-none flex items-center justify-center h-12 w-12`}>{getAbbr(name)}</span>;\n\n  const isActive = to && location.pathname.startsWith(to);\n  const activeClasses = (isActive)\n    ? 'rounded-xl bg-primary'\n    : 'rounded-full bg-bg-primary';\n\n  return (\n    <div className={`wrapper ${isActive && 'active'}`}>\n      <div className=\"selected rounded bg-white absolute -left-1 h-0 w-2\" />\n      <div className={`cursor-pointer guild-icon flex justify-center mb-2 ${activeClasses} ${classes}`}>\n        <Icon />\n      </div>\n    </div>\n  );\n}\n\nexport default SidebarIcon;","import { faDoorOpen } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { leaveGuild } from '../../store/members';\nimport DevModeMenuSection from './dev-mode-menu-section';\n\nexport interface GuildMenuProps {\n  guild: Entity.Guild;\n}\n\nconst GuildMenu: React.FunctionComponent<GuildMenuProps> = ({ guild }) => {\n  const dispatch = useDispatch();\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  return (\n    <ContextMenu\n      key={guild.id}\n      id={guild.id}\n      className=\"bg-bg-tertiary rounded shadow w-48 p-2\">\n      <MenuItem\n        className=\"flex items-center justify-between danger cursor-pointer\"\n        onClick={() => dispatch(leaveGuild(guild.id))}>\n        <span>Leave Guild</span>\n        <FontAwesomeIcon icon={faDoorOpen} />\n      </MenuItem>\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'Guild ID', id: guild.id },\n      ]} />}\n    </ContextMenu>\n  );\n}\n \nexport default GuildMenu;","import { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { actions as ui } from '../../../store/ui';\nimport CreateGuild from '../../modals/create-guild';\nimport SidebarIcon from './sidebar-icon';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport GuildMenu from '../../ctx-menus/guild-menu';\n \nconst SidebarIcons: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((s: Store.AppState) => s.auth.user)!;  \n  const guilds = useSelector((s: Store.AppState) => s.entities.guilds)!;\n\n  const guildIcons = guilds.map(g => (\n    <ContextMenuTrigger key={g.id} id={g.id}>\n      <Link to={`/channels/${g.id}`}>\n        <SidebarIcon\n          to={`/channels/${g.id}`}\n          imageURL={g.iconURL}\n          name={g.name} />\n      </Link>\n\n      <GuildMenu guild={g} />\n    </ContextMenuTrigger>\n  ));\n\n  const PlusIcon = () => (\n    <div\n      onClick={() => dispatch(ui.openedModal('CreateGuild'))}\n      className=\"success text-3xl\">\n      <SidebarIcon\n        name=\"+\"\n        classes=\"success\" />\n    </div>\n  );\n  \n  return (\n    <div className=\"overflow-auto min-h-screen float-left p-3 flex flex-col bg-bg-tertiary\">\n      <Link to=\"/channels/@me\">\n        <SidebarIcon\n          to=\"/channels/@me\"\n          imageURL={user.avatarURL}\n          name={user.username} />\n      </Link>\n      <div className=\"flex justify-center mb-1\">\n        <div className=\"h-0.5 w-8 rounded-sm bg-bg-modifier-accent mb-1\" />\n      </div>\n      {guildIcons}\n      <PlusIcon />\n    </div>\n  );\n}\n \nexport default SidebarIcons;","import SidebarContent from './sidebar-content';\nimport SidebarIcons from './sidebar-icons';\n \nconst Sidebar: React.FunctionComponent = (props) => {\n  \n  return (\n    <div className=\"sidebar flex float-left\">\n      <SidebarIcons />\n      <SidebarContent />\n    </div>\n  );\n}\n \nexport default Sidebar;\n","import { useState } from 'react';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport usePerms from '../../hooks/use-perms';\nimport { createMessage, updateMessage } from '../../store/messages';\nimport { getTypersInChannel, startTyping } from '../../store/typing';\nimport { actions as ui } from '../../store/ui';\nimport { getUser } from '../../store/users';\n\nexport interface MessageBoxProps {\n  content?: string;\n  editingMessageId?: string;\n}\n \nconst MessageBox: React.FunctionComponent<MessageBoxProps> = (props) => {\n  const store = useStore();\n  const dispatch = useDispatch();\n  const [content, setContent] = useState(props.content ?? '');\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const typers = useSelector(getTypersInChannel(channel.id));\n  const perms = usePerms();\n  \n  const onKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    handleEscape(event);\n    dispatch(startTyping(channel.id));\n    \n    if (event.key === 'Enter' && !event.shiftKey)\n      event.preventDefault();\n\n    const emptyMessage = content.replaceAll('\\n', '');\n    if (event.key !== 'Enter'\n      || event.shiftKey\n      || !emptyMessage) return;\n    \n    saveEdit();\n  }\n\n  const saveEdit = () => {\n    (props.editingMessageId)\n      ? dispatch(updateMessage(props.editingMessageId, { content }))\n      : dispatch(createMessage(channel.id, { content }));\n      \n    setContent('');\n    esc();\n  }\n  const esc = () => dispatch(ui.stoppedEditingMessage());\n\n  const handleEscape = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key !== 'Escape') return;\n    if (props.editingMessageId)\n      esc();\n  }\n\n  const user = (userId: string) => getUser(userId)(store.getState());\n\n  const typingMessage = () => {\n    if (!typers.length) return;\n  \n    const maxTypers = 3;\n    const typingUsers = typers.map(t => user(t.userId)!.username).join(', ');\n    return (typers.length > maxTypers)\n      ? 'Many users are typing...'\n      : `${typingUsers} is typing...`\n  }\n\n  const canSend = perms.can('SEND_MESSAGES', guild.id);\n  const getPlaceholder = (): string | undefined => {\n    if (!canSend) return `Insufficient perms.`;\n    if (!props.editingMessageId) return `Message #${channel.name}`;\n  }\n  \n  return (\n    <div className={`${props.editingMessageId ? 'mt-2' : 'px-4'}`}>\n      <TextareaAutosize\n        onChange={e => setContent(e.target.value)}\n        onKeyDown={onKeyDown}\n        value={content}\n        rows={1}\n        placeholder={getPlaceholder()}\n        className={`resize-none normal appearance-none rounded-lg leading-tight focus:outline-none w-full right-5 left-5 max-h-96 py-3 px-4 ${!canSend && 'cursor-not-allowed'}`}\n        disabled={!canSend}\n        autoFocus />\n      {(props.editingMessageId)\n        ? <span className=\"text-xs py-2\">\n            escape to <Link to=\"#\" onClick={esc}>cancel</Link> • \n            enter to <Link to=\"#\" onClick={saveEdit}> save</Link>\n          </span>\n        : <div className=\"text-sm w-full h-6\">{typingMessage()}</div>}\n    </div>\n  );\n}\n \nexport default MessageBox;\n","import { faPencilAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useDispatch, useSelector } from 'react-redux';\nimport usePerms from '../../../hooks/use-perms';\nimport { deleteMessage } from '../../../store/messages';\nimport { actions as ui } from '../../../store/ui';\n\nexport interface MessageToolbarProps {\n  message: Entity.Message;\n}\n \nconst MessageToolbar: React.FunctionComponent<MessageToolbarProps> = ({ message }) => {\n  const dispatch = useDispatch();\n  const selfUser = useSelector((s: Store.AppState) => s.auth.user)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const openModal = useSelector((s: Store.AppState) => s.ui.openModal);\n  const perms = usePerms();\n\n  const isAuthor = message.authorId === selfUser.id;\n  const canManage = perms.can('MANAGE_MESSAGES', guild.id)\n    || guild?.ownerId === selfUser.id\n    || isAuthor;\n  \n  return (!openModal) ? (\n    <div className=\"float-right shadow bg-bg-secondary px-2 rounded cursor-pointer\">\n      {isAuthor && (\n        <div className=\"inline\">\n          <FontAwesomeIcon\n            onClick={() => dispatch(ui.startedEditingMessage(message.id))}\n            className=\"mr-2\"\n            icon={faPencilAlt} />\n        </div>\n      )}\n      {canManage && (\n        <div className=\"inline\">\n          <FontAwesomeIcon\n          onClick={() => dispatch(deleteMessage(message.id))}\n          className=\"danger\"\n          icon={faTimes} />\n        </div>\n      )}\n    </div>\n  ) : null;\n}\n \nexport default MessageToolbar;","import { ContextMenu } from 'react-contextmenu';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport DevModeMenuSection from './dev-mode-menu-section';\n\nexport interface MessageMenuProps {\n  message: Entity.Message;\n}\n \nconst MessageMenu: React.FunctionComponent<MessageMenuProps> = ({ message }) => {\n  const { guildId }: any = useParams();\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  return (guildId) ? (\n    <ContextMenu\n      key={message.id}\n      id={message.id}\n      className=\"bg-bg-tertiary rounded shadow w-48 p-2\">\n      <div className=\"overflow-hidden\">\n        <span className=\"bg-bg-primary p-1 rounded max-w-full\">{message.content}</span>\n      </div>\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'Message ID', id: message.id },\n      ]} />}\n    </ContextMenu>\n  ) : null;\n}\n \nexport default MessageMenu;","import './message.scoped.css';\n\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport { getChannelMessages } from '../../../store/messages';\nimport { getUser } from '../../../store/users';\nimport MessageBox from '../message-box';\nimport MessageToolbar from './message-toolbar';\nimport { getMemberHighestRole } from '../../../store/roles';\nimport { getSelfMember } from '../../../store/members';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport MessageMenu from '../../ctx-menus/message-menu';\n\nexport interface MessageProps {\n  message: Entity.Message;\n}\n\nconst Message: React.FunctionComponent<MessageProps> = ({ message }: MessageProps) => {\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const member = useSelector(getSelfMember(guild.id))!;\n  const highestRole = useSelector(getMemberHighestRole(guild.id, member.userId));\n  const author = useSelector(getUser(message.authorId));\n  const messages = useSelector(getChannelMessages(message.channelId));\n  const editingMessageId = useSelector((s: Store.AppState) => s.ui.editingMessageId);\n  const createdAt = new Date(message.createdAt);\n\n  const isExtra = () => {\n    const i = messages.findIndex(m => m.id === message.id);\n    const prev = messages[i - 1];\n    if (!prev) return false;\n\n    const minsSince = moment(createdAt).diff(prev.createdAt, 'minutes');    \n    const minsToSeparate = 5;\n\n    return minsSince <= minsToSeparate\n        && prev.authorId === message.authorId;\n  }\n  const isActuallyExtra = isExtra();\n\n  const leftSide = () => (isActuallyExtra)\n    ? <span className=\"timestamp text-xs\">\n        {moment(createdAt).format('HH:mm')}\n      </span>\n    : <img\n        className=\"rounded-full cursor-pointer w-10 h-10\"\n        src={`${process.env.REACT_APP_CDN_URL}${author.avatarURL}`}\n        alt={author.username} />;\n  \n  const MessageHeader = () => {\n    if (isActuallyExtra) return null;\n\n    const today = () => {\n      const today = new Date();\n      today.setHours(0);\n      today.setMinutes(0);\n      today.setSeconds(0);\n      return today;\n    }\n  \n    const days = moment(today()).diff(createdAt.setHours(0), 'days');\n    const day = {\n      [1]: 'Yesterday',\n      [0]: 'Today',\n      [-1]: 'Tomorrow',\n    }[days];\n    const timestamp = (day) ? `[${day}] [at] HH:mm` : 'DD/MM/YYYY';\n\n    return (\n      <div>\n        <ContextMenuTrigger id={author.id}>\n          <span\n            style={{ color: highestRole.color }}\n            className=\"text-base heading hover:underline cursor-pointer mr-2\">{author.username}</span>\n        </ContextMenuTrigger>\n        <span className=\"text-xs\">{moment(createdAt).format(timestamp)}</span>\n      </div>\n    );\n  }\n\n  const MessageContent = () => (editingMessageId === message.id)\n    ? <MessageBox\n        content={message.content}\n        editingMessageId={message.id} />\n    : <div className=\"relative\">\n        <div className=\"normal whitespace-pre-wrap\">{message.content}{message.updatedAt &&\n          <span className=\"select-none muted edited text-xs ml-1\">(edited)</span>}</div>\n      </div>;\n\n  return (\n    <ContextMenuTrigger key={message.id} id={message.id}>\n      <div className={`message flex ${!isActuallyExtra && 'mt-4'}`}>\n        <div className=\"flex-shrink-0 left-side text-xs w-16 mr-2 pl-5 pt-1\">{leftSide()}</div>\n        <div className=\"relative flex-grow px-2\">\n          <div className=\"absolute toolbar right-0 -mt-3 z-10\">\n            <MessageToolbar message={message} />\n          </div>\n          <MessageHeader />\n          <MessageContent />\n        </div>\n        <div className=\"right-side w-12\" />\n      </div>\n      <MessageMenu message={message} />\n    </ContextMenuTrigger>\n  );\n}\n\nexport default Message;","import { faEyeSlash, faHashtag } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSelector } from 'react-redux';\n\nexport interface TextChannelHeaderProps {\n  canRead?: boolean;\n}\n \nconst TextChannelHeader: React.FunctionComponent<TextChannelHeaderProps> = ({ canRead }) => {\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  \n  return (\n    <div className=\"m-4 pb-6 border-bottom\">\n      <span className=\"rounded-full\">\n        <FontAwesomeIcon\n          className=\"muted\"\n          icon={canRead ? faHashtag : faEyeSlash}\n          size=\"3x\" />\n      </span>\n      <h1 className=\"text-3xl font-bold my-2\">\n        {(canRead)\n          ? `Welcome to #${channel.name}!`\n          : `Message history hidden.`\n        }</h1>\n      <p className=\"lead\">\n        {(canRead)\n          ? `This is the start of the #${channel.name} channel.`\n          : `Insufficient permissions to view messages in this channel.`\n        }</p>\n    </div>\n  );\n}\n\nexport default TextChannelHeader;","const SkeletonMessage: React.FunctionComponent = () => {\n  return (    \n    <div className=\"rounded-md px-5 py-2 max-w-sm w-full\">\n      <div className=\"animate-pulse flex space-x-4\">\n        <div className=\"rounded-full bg-bg-tertiary h-10 w-10\"></div>\n        <div className=\"flex-1 space-y-4 py-1\">\n          <div className=\"h-4 bg-bg-tertiary rounded w-3/4\"></div>\n          <div className=\"space-y-2\">\n            <div className=\"h-4 bg-bg-tertiary rounded\"></div>\n            <div className=\"h-4 bg-bg-tertiary rounded w-5/6\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n \nexport default SkeletonMessage;","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchMessages, getChannelMessages } from '../../store/messages';\nimport Message from './message/message';\nimport MessageBox from './message-box';\nimport { useEffect } from 'react';\nimport TextChannelHeader from './text-channel-header';\nimport usePerms from '../../hooks/use-perms';\nimport SkeletonMessage from '../skeleton/skeleton-message';\n \nconst TextBasedChannel: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const messages = useSelector(getChannelMessages(channel.id));\n  const perms = usePerms();\n\n  useEffect(() => {\n    dispatch(fetchMessages(channel.id));\n\n    const element = document.querySelector('#messages')!;\n    element.scrollTop = element.scrollHeight;\n  }, [messages.length]); // only fetches channel messages when not cached\n\n  const loaded = channel.lastMessageId === messages[messages.length]?.id;\n  const canRead = perms.can('READ_MESSAGES', guild.id);\n\n  return (\n    <div className=\"h-full flex flex-col flex-grow\">\n      <div\n        id=\"messages\"\n        className=\"overflow-auto mb-5 mr-1 mt-1 flex-grow\">\n        <TextChannelHeader canRead={canRead} />\n        {!(canRead || loaded) && new Array(6).fill(<SkeletonMessage />)}\n        {canRead && messages.map(m => <Message key={m.id} message={m} />)}\n      </div>\n      <MessageBox />\n    </div>\n  );\n}\n\nexport default TextBasedChannel;","import Select from 'react-select';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getGuildRoles } from '../../../store/guilds';\nimport { useState } from 'react';\nimport { updateMember } from '../../../store/members';\n\nexport interface RoleManagerProps {\n  member: Entity.GuildMember;\n}\n\nconst RoleManager: React.FunctionComponent<RoleManagerProps> = ({ member }) => {\n  const removeEveryone = (arr: any[]) => arr.slice(1);\n  const slicedRoleIds = removeEveryone(member.roleIds);\n\n  const dispatch = useDispatch();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const roles = removeEveryone(useSelector(getGuildRoles(guild.id)));\n  const [roleIds, setRoleIds] = useState(slicedRoleIds);\n\n  const colorStyles = {\n    control: () => ({\n      width: '200px',\n      backgroundColor: 'var(--bg-secondary)',\n    }),\n    option: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: 'var(--bg-secondary)',\n      cursor: 'pointer',\n    }),\n    input: (styles) => ({ ...styles, color: 'var(--font)' }),\n    menu: (styles) => ({\n      ...styles,\n      backgroundColor: 'var(--bg-secondary)',\n    }),\n    multiValue: (styles) => ({\n      ...styles,\n      color: 'var(--font)',\n      backgroundColor: 'var(--bg-tertiary)',\n    }),\n    indicatorSeparator: () => ({ display: 'none' }),\n    indicatorsContainer: (styles) => ({ ...styles, marginBottom: '-7.5px', float: 'right' }),\n    multiValueLabel: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: 'var(--bg-tertiary)',\n    }),\n  };\n  \n  const rolesHaveChanged = JSON.stringify(roleIds) !== JSON.stringify(slicedRoleIds);\n  const roleOption = (role: Entity.Role) => ({\n    label: role.name,\n    value: role.id,\n    color: role.color,\n  });\n  \n  return (\n    <div onClick={e => e.preventDefault()}>\n      <Select\n        defaultValue={roleIds.map(id => {\n          const role = roles.find(r => r.id === id);\n          return (role) ? roleOption(role) : undefined;\n        })}\n        name=\"colors\"\n        options={roles.map(roleOption)}\n        onChange={options => setRoleIds(options.map(o => o.value))}\n        onMenuClose={() => rolesHaveChanged && dispatch(updateMember(member.id, { roleIds }))}\n        styles={colorStyles}\n        placeholder=\"Add roles...\"\n        noOptionsMessage={() => 'No roles to add'}\n        // onChange={e => setRoleIds(e.currentTarget.value as any)}\n        // onClick={() => dispatch(updateMember(member.id, { roleIds }))}\n        isMulti />\n    </div>\n  );\n}\n\nexport default RoleManager;","import { faBan, faIdCard, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport usePerms from '../../../hooks/use-perms';\nimport { getMember, kickMember } from '../../../store/members';\nimport { actions as ui } from '../../../store/ui';\nimport { toggleBlockUser } from '../../../store/users';\nimport UserProfile from '../../modals/user-profile';\nimport DevModeMenuSection from '../dev-mode-menu-section';\nimport RoleManager from './role-manager';\n\nexport interface GuildMemberMenuProps {\n  user: Entity.User;\n}\n\nconst GuildMemberMenu: React.FunctionComponent<GuildMemberMenuProps> = ({ user }) => {\n  const dispatch = useDispatch();\n  const perms = usePerms();\n  const selfUser = useSelector((s: Store.AppState) => s.auth.user)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const member = useSelector(getMember(guild.id, user.id))!;\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  const isSelf = user.id === selfUser.id;  \n  const userIsBlocked = selfUser.ignored?.userIds.includes(member.userId);\n\n  return (\n    <ContextMenu\n      id={user.id}\n      className=\"bg-bg-tertiary p-2 rounded shadow\">\n      <MenuItem\n        onClick={() => {\n          dispatch(ui.focusedUser(user));\n          dispatch(ui.openedModal('UserProfile'));\n        }}\n        className=\"flex items-center justify-between cursor-pointer\">\n        <span>View Profile</span>\n        <FontAwesomeIcon icon={faUser} />\n      </MenuItem>\n      \n      {user.id !== selfUser.id && (<>\n        <hr className=\"my-2 border-bg-primary\" />\n        <MenuItem className=\"flex items-center justify-between  cursor-pointer danger\">\n          <span\n            onClick={() => dispatch(toggleBlockUser(member.userId))}>\n            {userIsBlocked ? 'Unblock' : 'Block'}\n          </span>\n          <FontAwesomeIcon icon={faBan} />\n        </MenuItem>\n      </>)}\n        \n      <hr className=\"my-2 border-bg-primary\" />\n\n      {(!isSelf && perms.can('KICK_MEMBERS', guild.id)) && (\n        <MenuItem\n          className=\"danger cursor-pointer mb-2\"\n          onClick={() => dispatch(kickMember(guild.id, user.id))}>\n          <span>Kick {user.username}</span>\n        </MenuItem>\n      )}\n      {perms.can('MANAGE_ROLES', guild.id) && <RoleManager member={member} />}\n\n      <div className=\"mb-10\" />\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'User ID', id: user.id },\n        { title: 'Member ID', id: member.id },\n      ]} />}\n    </ContextMenu>\n  );\n}\n \nexport default GuildMemberMenu;","import Category from '../utils/category';\nimport Username from './username';\nimport { useSelector } from 'react-redux';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport GuildMemberMenu from '../ctx-menus/guild-member/guild-member-menu';\nimport { getGuildMembers, getGuildUsers } from '../../store/guilds';\nimport { filterHoistedRoles } from '../../store/roles';\nimport usePerms from '../../hooks/use-perms';\nimport { getMember } from '../../store/members';\n\nconst MemberList: React.FunctionComponent = () => {\n  const perms = usePerms();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const isActive = useSelector((s: Store.AppState) => s.config.memberListToggled);\n  const hoistedRoles = useSelector(filterHoistedRoles(guild.id));\n  const members = useSelector(getGuildMembers(guild.id));\n\n  // get users that can view the channel\n  const users = useSelector(getGuildUsers(guild.id))\n    .filter(u => {\n      const member = members.find(m => m.userId === u.id)!;\n      return perms.canMember('VIEW_CHANNELS', guild, member);\n    });\n   \n  type UserListFilter = (s: Entity.User, i: number, a: Entity.User[]) => boolean;\n  const UserList = ({ category, filter: by }: { category: string, filter: UserListFilter }) => {\n    const filtered = users.filter(by);\n    return (filtered.length) ? (\n      <div>\n        <Category\n          className=\"pt-6 pr-2 pl-4 h-10 mb-2 ml-2\"\n          title={category}\n          count={filtered.length} />\n        {filtered.map(u => (\n          <ContextMenuTrigger\n            id={u.id}\n            key={u.id}>\n            <div className=\"m-2\">\n              <Username guild={guild} user={u} />\n            </div>\n            <GuildMemberMenu user={u} />\n          </ContextMenuTrigger>\n        ))}\n      </div>\n    ) : null;\n  }\n\n  const getRoleIds = (userId: string) => members.find(m => m.userId === userId)!.roleIds;\n  const hoisted = (user: Entity.User) => getRoleIds(user.id)\n    .some(id => hoistedRoles\n      .some(r => id === r.id));\n\n  return (isActive) ? (\n    <div className=\"bg-bg-secondary w-64\">\n      {hoistedRoles.map(r =>\n        <UserList\n          key={r.id}\n          category={r.name}\n          filter={u =>\n            getRoleIds(u.id).includes(r.id)\n            && hoisted(u)\n            && u.status === 'ONLINE'} />)}\n      <UserList\n        category=\"Online\"\n        filter={u => u.status === 'ONLINE' && !hoisted(u)} />\n      <UserList\n        category=\"Offline\"\n        filter={u => u.status === 'OFFLINE'} />\n    </div>\n  ) : null;\n}\n \nexport default MemberList;","import { useDispatch, useSelector } from 'react-redux';\nimport AppNavbar from '../navigation/app-navbar';\nimport Sidebar from '../navigation/sidebar/sidebar';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { actions as uiActions } from '../../store/ui';\nimport TextBasedChannel from '../channel/text-based-channel';\nimport MemberList from '../user/member-list';\nimport { getGuild, getGuildChannels } from '../../store/guilds';\nimport { useEffect } from 'react';\nimport PageWrapper from './page-wrapper';\nimport { getChannel } from '../../store/channels';\n\nconst GuildPage: React.FunctionComponent = () => {  \n  const { channelId, guildId }: any = useParams();\n  const dispatch = useDispatch();\n  const ui = useSelector((s: Store.AppState) => s.ui);\n  const guild = useSelector(getGuild(guildId));\n  const channel = useSelector(getChannel(channelId));\n  const guildChannels = useSelector(getGuildChannels(guildId));\n\n  useEffect(() => {\n    dispatch(uiActions.pageSwitched({ channel, guild }));\n  }, [guild, channel]);\n\n  if (!guild) \n    return <Redirect to=\"/channels/@me\" />;\n  else if (guildChannels.length && !channelId) {\n    const systemChannel = guildChannels[0];\n    return <Redirect to={`/channels/${guild.id}/${systemChannel.id}`} />;\n  }  \n\n  return (ui.activeGuild) ? (\n    <PageWrapper pageTitle={channel?.name ?? guild.name}>\n      <Sidebar />\n      {(channel)\n        ? <div className=\"bg-bg-primary\">\n            <AppNavbar />\n            <div\n              style={{ height: 'calc(100vh - 48px)' }}\n              className=\"flex\">\n              {ui.activeChannel && <TextBasedChannel />}\n              <MemberList />\n            </div>\n          </div>\n        : <div className=\"bg-bg-tertiary\" />}\n    </PageWrapper>\n  ) : null;\n}\n \nexport default GuildPage;","import './login-page.scoped.css';\n\nimport { Link, Redirect } from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport PageWrapper from '../page-wrapper';\nimport Input from '../../utils/input/input';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport { loginUser, forgotPasswordEmail, verifyCode } from '../../../store/auth';\nimport { useState } from 'react';\n\nconst LoginPage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, getValues } = useForm();\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const { enqueueSnackbar } = useSnackbar();\n  const shouldVerify = useSelector((s: Store.AppState) => s.auth.shouldVerify);\n\n  const VerifyCodeInput = () => {\n    const verifyForm = useForm();\n    const onVerify = () => dispatch(verifyCode(verifyForm.getValues().code));\n    \n    return (\n      <div>\n        <hr className=\"border-gray-500 my-4\" />\n        <div className=\"flex items-end\">\n          <Input\n            type=\"text\" \n            name=\"code\"\n            label=\"Verify Code\"\n            className=\"w-full mr-2\"\n            register={verifyForm.register} />\n          <NormalButton\n            type=\"button\"\n            onClick={onVerify}\n            className=\"bg-success text-black h-10\">Verify</NormalButton>\n        </div>\n      </div>\n    );\n  }\n\n  const onLogin = (data) => dispatch(loginUser(data));\n  const resetPassword = () => {\n    dispatch(forgotPasswordEmail(getValues().email));\n\n    enqueueSnackbar('Reset password instructions sent to email.', {\n      anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n      key: 'saveChanges',\n      variant: 'info',\n    });\n  }\n\n  return (user)\n    ? <Redirect to=\"/channels/@me\" />\n    : (\n      <PageWrapper pageTitle=\"accord.app | Login\">\n        <div className=\"flex items-center absolute justify-center h-screen\">\n          <form\n            className=\"rounded-md shadow bg-bg-primary p-8\"\n            onSubmit={handleSubmit(onLogin)}>\n            <h1 className=\"text-3xl font-bold\">Welcome back!</h1>\n            <p className=\"lead\">We're so excited to see you again!</p>\n\n            <Input\n              label=\"Email\"\n              name=\"email\"\n              register={register}\n              className=\"mt-3\" />\n            <Input\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              register={register}\n              className=\"mt-3\" />\n            <Link to=\"#\" onClick={resetPassword}>Forgot your password?</Link>\n\n            {shouldVerify && <VerifyCodeInput />}\n\n            <NormalButton className=\"w-full h-11 rounded-md mt-8\">Login</NormalButton>\n            <p className=\"mt-2\">Need an account? <Link to=\"/register\">Register</Link></p>\n          </form>\n        </div>\n        <Particles width=\"100%\" height=\"100%\" />\n      </PageWrapper>\n    );\n}\n\nexport default LoginPage;","import Particles from 'react-particles-js';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\n\nimport './register-page.scoped.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { registerUser } from '../../../store/auth';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport PageWrapper from '../page-wrapper';\nimport Input from '../../utils/input/input';\n\nconst RegisterPage: React.FunctionComponent = () => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const dispatch = useDispatch();\n  const { register, handleSubmit } = useForm();\n\n  const onSubmit = (data) => dispatch(registerUser(data));\n\n  return (user)\n    ? <Redirect to=\"/channels/@me\" />\n    : (\n      <PageWrapper>\n        <div className=\"flex items-center justify-center absolute h-screen\">\n          <form className=\"rounded-md shadow bg-bg-primary p-8\"\n            onSubmit={handleSubmit(onSubmit)}>\n            <h1 className=\"text-2xl font-bold mb-8 text-center\">Create an account</h1>\n\n            <Input\n              label=\"Email\"\n              name=\"email\"\n              register={register}\n              className=\"mt-3\" />\n            <Input\n              label=\"Username\"\n              name=\"username\"\n              register={register}\n              className=\"mt-3\" />\n            <Input\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              register={register}\n              className=\"mt-3\" />\n\n            <NormalButton className=\"w-full h-11 rounded-md mt-8\">Register</NormalButton>\n            <p className=\"mt-2\">\n              <Link to=\"/login\">Already have an account?</Link>\n            </p>\n          </form>\n        </div>\n        <Particles width=\"100%\" height=\"100%\" />\n      </PageWrapper>\n    );\n}\n\nexport default RegisterPage;","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions as ui } from '../../store/ui';\nimport AppNavbar from '../navigation/app-navbar';\nimport Sidebar from '../navigation/sidebar/sidebar';\nimport PageWrapper from './page-wrapper';\n\nconst OverviewPage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(ui.pageSwitched({ channel: null, guild: null }));\n  }, []);\n\n  return (\n    <PageWrapper\n      className=\"bg-bg-primary h-full w-full\"\n      pageTitle=\"accord.app\">\n      <Sidebar />\n      <AppNavbar />\n      <div className=\"bg-bg-primary h-full w-full flex flex-col flex-grow\"></div>\n    </PageWrapper>\n  );\n}\n \nexport default OverviewPage;","import { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logoutUser } from '../../../store/auth';\n\nconst LogoutPage: React.FunctionComponent = () => {\n  useDispatch()(logoutUser());\n  \n  return <Redirect to=\"/\" push />;\n}\n \nexport default LogoutPage;","import { actions as api } from '../api';\nimport { actions as channelActions } from '../channels';\nimport { actions as guildActions } from '../guilds';\nimport { actions as memberActions } from '../members';\nimport { actions as meta } from '../meta';\nimport { actions as roleActions } from '../roles';\nimport { actions as userActions } from '../users';\nimport { headers } from '../utils/rest-headers';\n\nexport default () => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [],\n    headers: headers(),\n    url: `/users/entities`,\n    callback: (data: REST.From.Get['/users/entities']) => {\n      dispatch(channelActions.fetched(data.channels));\n      dispatch(guildActions.fetched(data.guilds));\n      dispatch(memberActions.fetched(data.members));\n      dispatch(roleActions.fetched(data.roles));\n      dispatch(userActions.fetched(data.users));\n      dispatch(meta.fetchedEntities());\n    },\n  }));  \n}","import { useEffect } from 'react';\nimport PageWrapper from './page-wrapper';\nimport { ready } from '../../store/auth';\nimport { useDispatch } from 'react-redux';\nimport fetchEntities from '../../store/actions/fetch-entities';\n\nconst LoadingPage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(ready());\n    dispatch(fetchEntities());\n  }, []);\n\n  const tips = [\n    'Did Discord steal our idea?!?!',\n    'ADAMJR, Stop refactoring code please. okthxbye.',\n    'Sample Text.',\n    '!(\\'Hello World\\')',\n    'May work on a Tesla',\n    'Please subscribe.',\n    'Hi YouTube!',\n    'accord.includes(\\'VOICE_CHANNEL\\') === false',\n    'This message is officially dumb.',\n    'This message is funny.',\n    'Dear Bill Gates please buy my app okthxbye.',\n    'Is coding the same as programming? :thinking:',\n    'TypeError: There may be bugs.',\n    'What is a Discord? :thinking:',\n    'What\\'s your Skype? Wait, actually I don\\'t want your IP. Cya.',\n    'Started in 2020.',\n    'Disclaimer: Not actually a Discord clone.',\n  ];\n  const randomIndex = Math.floor(Math.random() * tips.length);\n\n  return (\n    <PageWrapper\n      pageTitle=\"Loading...\"\n      className=\"flex items-center justify-center h-screen\">\n      <div className=\"text-center\">\n        <h1 className=\"text-3xl\">Loading...</h1>\n        <p className=\"lead block\">{tips[randomIndex]}</p>\n      </div>\n    </PageWrapper>\n  );\n}\n \nexport default LoadingPage;\n","import { useSelector } from 'react-redux';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport LoadingPage from '../pages/loading-page';\n\n// this route ensures that the user is logged in, else redirects them \nconst PrivateRoute: React.FunctionComponent<RouteProps> = (props) => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const fetchedEntities = useSelector((s: Store.AppState) => s.meta.fetchedEntities);\n  const attemptedLogin = useSelector((s: Store.AppState) => s.auth.attemptedLogin);\n\n  if (attemptedLogin && !user)\n    return <Redirect to=\"/login\" />;\n  else if (!user || !fetchedEntities)\n    return <LoadingPage />;\n  \n  return (\n    <Route {...props} />\n  );\n}\n \nexport default PrivateRoute;","import Particles from 'react-particles-js';\nimport { Link } from 'react-router-dom';\nimport CircleButton from '../utils/buttons/circle-button';\nimport PageWrapper from './page-wrapper';\n\nconst NotFoundPage: React.FunctionComponent = () => {\n  return (\n    <PageWrapper\n      className=\"relative w-screen h-screen\"\n      pageTitle=\"accord.app | Not Found\">\n      <header className=\"absolute text-center bottom-1/2 right-1/2\">\n        <h1 className=\"text-4xl pb-3\">Not Found</h1>\n        <Link to=\"/\">\n          <CircleButton>Return Home</CircleButton>\n        </Link>\n      </header>\n      <Particles width=\"100%\" height=\"100%\" />\n    </PageWrapper>\n  );\n}\n \nexport default NotFoundPage;","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect, useLocation } from 'react-router';\nimport { verifyCode } from '../../../store/auth';\nimport LoadingPage from '../loading-page';\n\nconst VerifyPage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const query = new URLSearchParams(useLocation().search);\n  const code = query.get('code')?.toString();\n  \n  useEffect(() => {\n    if (code)\n      dispatch(verifyCode(code));\n  }, []);\n\n  return (code) ? <LoadingPage /> : <Redirect to=\"/\" />;\n}\n \nexport default VerifyPage;","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/home-page';\nimport GuildPage from './pages/guild-page';\nimport LoginPage from './pages/auth/login-page';\nimport RegisterPage from './pages/auth/register-page';\nimport OverviewPage from './pages/overview-page';\nimport LogoutPage from './pages/auth/logout-page';\nimport PrivateRoute from './routing/private-route';\nimport NotFoundPage from './pages/not-found-page';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport fetchEntities from '../store/actions/fetch-entities';\nimport { ready } from '../store/auth';\nimport { initPings } from '../store/pings';\nimport VerifyPage from './pages/auth/verify-page';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(ready());\n    dispatch(fetchEntities());\n    dispatch(initPings());\n  }, []);\n  \n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route exact path=\"/register\" component={RegisterPage} />\n        <Route exact path=\"/logout\" component={LogoutPage} />\n        <Route exact path=\"/verify\" component={VerifyPage} />\n\n        <PrivateRoute exact path=\"/channels/@me\" component={OverviewPage} />\n        <PrivateRoute exact path=\"/channels/:guildId/:channelId?\" component={GuildPage} />\n\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\nimport { actions, APIArgs } from '../api';\nimport { openDialog } from '../ui';\n\nexport default store => next => async action => {\n  if (action.type !== actions.restCallBegan.type)\n    return next(action);\n\n  const { url, method, data, onSuccess, headers, callback } = action.payload as APIArgs;\n\n  next(action);\n\n  try {\n    const { data: payload } = await axios.request({\n      baseURL: process.env.REACT_APP_API_URL,\n      data,\n      method,\n      url,\n      headers,\n    });\n\n    store.dispatch(actions.restCallSucceded(payload));\n    if (onSuccess)\n      for (const type of onSuccess)\n        store.dispatch({ type, payload });\n\n    // called after dispatch events\n    callback && callback(payload);\n  } catch (error) {\n    const response = (error as any).response;\n    store.dispatch(actions.restCallFailed(response));\n    store.dispatch(openDialog({\n      content: response?.data?.message ?? 'Unknown Error',\n      variant: 'error',\n    }));\n  }\n};","import { actions } from '../api';\nimport ws from '../../services/ws-service';\n\nexport default store => next => async action => {\n  if (action.type !== actions.wsCallBegan.type)\n    return next(action);\n  \n  const { data, event } = action.payload;\n\n  next(action);\n\n  const unsub = () => {\n    ws.off(event, wrapperCallback);\n    ws.off('error', errorCallback);\n  };\n\n  const wrapperCallback = (payload) => {\n    unsub();\n    store.dispatch(actions.wsCallSucceded({\n      event,\n      payload,\n    }));\n  };\n  const errorCallback = (payload) => {\n    unsub();\n    store.dispatch(actions.wsCallFailed({\n      event,\n      payload,\n    }));\n  }\n\n  ws.on(event, wrapperCallback);\n  ws.on('error', errorCallback);\n\n  ws.emit(event, data);\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configure-store';\nimport { SnackbarProvider } from 'notistack';\n\nimport './index.css';\n\nconsole.log(process.env.MODE);\n\nReactDOM.render(\n  <SnackbarProvider maxSnack={1}>\n    <Provider store={configureStore()}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </SnackbarProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport guilds from './guilds';\nimport messages from './messages';\nimport api from './middleware/rest';\nimport ws from './middleware/ws';\nimport users from './users';\nimport channels from './channels';\nimport auth from './auth';\nimport config from './config';\nimport ui from './ui';\nimport meta from './meta';\nimport members from './members';\nimport invites from './invites';\nimport roles from './roles';\nimport typing from './typing';\nimport pings from './pings';\n\nexport default () => configureStore<Store.AppState>({\n  middleware: [\n    ...getDefaultMiddleware({ serializableCheck: false }),\n    ws,\n    api,\n  ] as any,\n  reducer: combineReducers({\n    auth,\n    config,\n    entities: combineReducers({\n      channels,\n      invites,\n      guilds,\n      members,\n      messages,\n      pings,\n      typing,\n      roles,\n      users,\n    }),\n    meta,\n    ui,\n  }),\n});\n"],"sourceRoot":""}